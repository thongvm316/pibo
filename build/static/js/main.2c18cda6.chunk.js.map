{"version":3,"sources":["component/Text/PropertyTitle.js","component/Input/SearchNInput.js","component/Input/FromTo.js","component/Input/BODropdownHalf.js","component/Input/BOInput.js","Contents/ProductInfo.js","component/Input/BODropdownLine.js","component/Input/BOEmpty.js","component/Text/PropertyData.js","component/Input/BOViewHalfLine.js","Contents/BatchUpdate.js","component/Input/BODropdownNInputHalf.js","Contents/MallInfo.js","Contents/InterfaceResult.js","component/Input/BORadio.js","Contents/AttributeInfo.js","Contents/NoticeInfo.js","component/Input/BOInputFull.js","Contents/SynonymDic.js","Contents/AsyncTable.js","Contents/PriceInfo.js","Contents/PriceAdjust.js","Contents/MenuTree.js","component/BOContents.js","component/UBOMain.js","component/LoginMain.js","App.js","reportWebVitals.js","index.js"],"names":["PropertyTitle","props","span","style","textAlign","Title","level","margin","fontSize","text","SearchNInput","name","padding","Item","size","disabled","icon","SearchOutlined","block","FromTo","dateFormat","menu","onClick","e","message","info","console","log","UserOutlined","format","Button","overlay","BODropdownHalf","handleMenuClick","border","align","className","DownOutlined","BOInput","defaultValue","value","ProductInfo","title","type","actions","RedoOutlined","CheckOutlined","gutter","display","marginTop","marginBottom","columns","dataIndex","key","BODropdownLine","BOEmpty","PropertyData","BOViewHalfLine","BatchUpdate","Column","Table","ColumnGroup","column","LockOutlined","scroll","x","BODropdownNInputHalf","ColFormStyle","MallInfo","InterfaceResult","BORadio","Group","onChange","AttributeInfo","contents","NoticeInfo","BOInputFull","SynonymDic","PlusOutlined","MinusOutlined","SaveOutlined","ReloadOutlined","Typography","Text","Link","AsyncTable","current","asyncCurrent","total","asyncTotal","pageSize","asyncPageSize","showSizeChanger","showTotal","searchDate","asyncOnChange","asyncColumns","dataSource","asyncDataSource","pagination","asyncPagination","asyncScroll","PriceInfo","Form","useForm","productForm","useState","searchResult","setSearchResult","searchResultDate","setSearchResultDate","searchTotal","setSearchTotal","searchCurrent","setSearchCurrent","searchPageSize","setSearchPageSize","fromDate","setFromDate","toDate","setToDate","historyResult","setHistoryResult","searchClick","enabled","date","page","offset","url","String","axios","defaults","headers","common","myCookies","get","method","then","response","makeSearchResult","data","catch","error","status","request","taskColumns","render","record","excelDownloadClick","useEffect","setFieldsValue","form_date","getToday","form_market","form_prod_no","form_brand","form_prod","form_price","d","Date","getFullYear","getMonth","getDate","RangePicker","DatePicker","result","ordPriceList","refSearchResult","Array","limit","forEach","index","array","ordItemList","isFirst","value2","index2","array2","Object","assign","push","JSON","parse","stringify","responseType","blob","Blob","FileSaver","saveAs","direction","dates","dateStrings","history","alert","hideOnSinglePage","ProductAdjust","bmsForm","uploadDisable","setuploadDisable","naverFile","setNaverFile","kakaoFile","setKakaoFile","bmsUploadDisable","setbmsUploadDisable","bmsFile","setBmsFile","layout","labelCol","wrapperCol","formData","FormData","append","config","bmsSubmitFile","width","form","accept","target","files","handleBmsFileInput","submitFile","onFinish","values","fieldValue","getFieldsValue","handleNaverFileInput","handleKakaoFileInput","menuTree","defaultExpandedKeys","defaultSelectedKeys","defaultCheckedKeys","onRightClick","event","node","onSelect","selectedKeys","React","Key","treeData","BOContents","Keys","contentsKey","func","content","writeContents","Header","Layout","Sider","Content","SubMenu","Menu","UBOMain","collapsed","setContents","createMenu","isLeaf","menuClick","ReconciliationOutlined","children","map","sub","menuMap","backgroundColor","verticalAlign","overflow","height","left","trigger","collapsible","mode","theme","minHeight","LoginMain","isVisible","setIsVisible","loginForm","cookies","makeJson2MenuTree","menuList","arr","obj","menuNm","menuId","leafYn","subMenu","menuLoad","pauth2","withCredentials","setMenuTree","visible","onOk","paramId","paramPassword","id","password","set","pauth","onCancel","initialValues","remember","onFinishFailed","label","rules","required","Password","valuePropName","Checkbox","App","Cookies","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c18cda6.chunk.js","sourcesContent":["import React from 'react';\nimport {\n    Col,\n\n    Typography,\n} from \"antd\";\n\n\nexport default function PropertyTitle(props){\n    return (\n        <Col span={4}   style={{textAlign: 'center'}} >\n            <Typography.Title level={5} style={{margin:10, fontSize:\"revert\"}} >{props.text} </Typography.Title>\n        </Col>\n    );\n}\n","import React  from 'react';\nimport {\n    Button,\n    Col,\n    Form,\n    Input,\n    Row,\n    Typography\n} from \"antd\";\nimport { SearchOutlined} from \"@ant-design/icons\";\nimport PropertyTitle from \"../Text/PropertyTitle\";\n\n\nexport default function SearchNInput(props){\n    return (\n        <>\n            <PropertyTitle text = {props.name}/>\n            <Col span={8} >\n                <Row style = {{ margin: 0, padding: 0}}>\n                    <Col span={12}>\n                        <Form.Item style = {{ margin: 0, padding: 0}}>\n                            <Input size = \"small\" disabled/>\n                        </Form.Item>\n                    </Col>\n\n                    <Col span={12}>\n                        <Form.Item style = {{ margin: 0, padding: 0}}>\n                            <Button size = \"small\" icon = {<SearchOutlined/>} block\n                            > {props.name} 검색\n                            </Button>\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Col>\n\n        </>\n    );\n}\n","import React from 'react';\nimport {\n    Button,\n    Col, DatePicker,\n    Form,\n    Row,\n    Typography,\n    Dropdown, Menu, message,\n} from \"antd\";\nimport {UserOutlined} from \"@ant-design/icons\";\nimport PropertyText from \"../Text/PropertyTitle\";\n\n\nexport default function FromTo(props){\n\n    const dateFormat = 'MM/DD/YY';\n\n    function handleMenuClick(e) {\n        message.info('Click on menu item.');\n        console.log('click', e);\n    }\n\n    function handleButtonClick(e) {\n        message.info('Click on left button.');\n        console.log('click left button', e);\n    }\n    const menu = (\n        <Menu onClick={handleMenuClick}>\n            <Menu.Item key=\"1\" icon={<UserOutlined />}>\n                1st menu item\n            </Menu.Item>\n            <Menu.Item key=\"2\" icon={<UserOutlined />}>\n                2nd menu item\n            </Menu.Item>\n            <Menu.Item key=\"3\" icon={<UserOutlined />}>\n                3rd menu item\n            </Menu.Item>7\n        </Menu>\n    );\n    return (\n        <>\n            <PropertyText text = {props.name}/>\n            <Col span={8}>\n                <Row style = {{ margin: 0, padding: 0}}>\n                    <Col span={6}>\n                        <Form.Item style = {{ margin: 0, padding: 0}}>\n                            <DatePicker size =\"small\" format={dateFormat}/>\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item style = {{ margin: 0, padding: 0}}>\n                            <DatePicker size =\"small\" format={dateFormat}/>\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item style = {{ margin: 0, padding: 0}}>\n\n                            <Dropdown.Button  size =\"small\" onClick={handleButtonClick} overlay={menu} block>\n                                hello world\n                            </Dropdown.Button>\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item style = {{ margin: 0, padding: 0}}>\n                            <Button size =\"small\" block>초기화</Button>\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Col>\n\n        </>\n    );\n}\n","import React from 'react';\nimport {\n    Form,\n    Typography,\n    Dropdown, Menu, message, Col,\n} from \"antd\";\nimport {UserOutlined, DownOutlined} from \"@ant-design/icons\";\nimport PropertyTitle from \"../Text/PropertyTitle\";\n\nexport default function BODropdownHalf(props){\n\n    function handleMenuClick(e) {\n        message.info('Click on menu item.');\n        console.log('click', e);\n    }\n    const ColFormStyle = {\n        border:'none',\n    };\n\n    function handleButtonClick(e) {\n        message.info('Click on left button.');\n        console.log('click left button', e);\n    }\n    const menu = (\n        <Menu onClick={handleMenuClick}>\n            <Menu.Item key=\"1\" icon={<UserOutlined />}>\n                1st menu item\n            </Menu.Item>\n            <Menu.Item key=\"2\" icon={<UserOutlined />}>\n                2nd menu item\n            </Menu.Item>\n            <Menu.Item key=\"3\" icon={<UserOutlined />}>\n                3rd menu item\n            </Menu.Item>\n        </Menu>\n    );\n    return (\n        <>\n            <PropertyTitle text = {props.name}/>\n            <Col span={8} style={ColFormStyle} align={\"left\"} >\n                <Form.Item style = {{ margin: 0, padding: 0}}>\n                    <Dropdown overlay={menu}>\n                        <a className=\"ant-dropdown-link\" onClick={e => handleMenuClick(e)}>\n                            hello world  <DownOutlined />\n                        </a>\n                    </Dropdown>\n                    {/*<Dropdown.Button onClick={handleButtonClick} overlay={menu} size =\"small\" >*/}\n                    {/*    hello world*/}\n                    {/*</Dropdown.Button>*/}\n                    {/*<Dropdown overlay={menu}>*/}\n                    {/*    <div>*/}\n                    {/*        hello world*/}\n                    {/*    </div>*/}\n                    {/*</Dropdown>*/}\n                </Form.Item>\n            </Col>\n\n        </>\n    );\n}\n","import React from 'react';\nimport {\n    Col,\n\n    Form,\n    Input,\n\n} from \"antd\";\nimport PropertyTitle from \"../Text/PropertyTitle\";\n\n\nexport default function BOInput(props){\n    return (\n        <>\n            <PropertyTitle text = {props.name}/>\n            <Col span={8} align={\"left\"}>\n                <Form.Item style = {{ margin: 0, padding: 0}}>\n                    <Input size=\"small\" defaultValue={props.value}/>\n                </Form.Item>\n            </Col>\n\n        </>\n    );\n}\n","import React from 'react';\nimport {\n    Button, Card,\n    Col,\n    Divider,\n    Form,\n    Row,\n    Space,\n    Table,\n    Typography\n} from \"antd\";\nimport {CheckOutlined,RedoOutlined } from \"@ant-design/icons\";\nimport SearchNInput from \"../component/Input/SearchNInput\";\nimport FromTo from \"../component/Input/FromTo\";\nimport BODropdownHalf from \"../component/Input/BODropdownHalf\";\nimport BOInput from \"../component/Input/BOInput\";\n\n\n\nexport default function ProductInfo(props){\n\n    const columns = [\n        {\n            title: '번호',\n            dataIndex: 'no',\n            key: 'no',\n        },\n        {\n            title: '상품명',\n            dataIndex: 'name',\n            key: 'name',\n        },\n        {\n            title: 'SAP 코드',\n            dataIndex: 'sap',\n            key: 'sap',\n        },\n        {\n            title: '브랜드',\n            dataIndex: 'brand',\n            key: 'brand',\n        },\n        {\n            title: '분류',\n            dataIndex: 'class',\n            key: 'class',\n        },\n        {\n            title: '고시품목',\n            dataIndex: 'bcast',\n            key: 'bcast',\n        },\n        {\n            title: '수정자',\n            dataIndex: 'modifier',\n            key: 'modifier',\n        },\n        {\n            title: '수정일',\n            dataIndex: 'mod_date',\n            key: 'mod_date',\n        },\n        {\n            title: '등록일시',\n            dataIndex: 'create_date',\n            key: 'create_date',\n        },\n    ];\n    return (\n    <>\n        <Card title=\"상품 정보 관리\" type = \"inner\"\n              actions={[\n                  <div/>, <div/>, <div/>,\n                  <Button icon={<RedoOutlined />}> 초기화 </Button>,\n                  <Button icon = {<CheckOutlined />}> 조회 </Button>,\n                  <Button icon = {<CheckOutlined />}> 조회 </Button>,\n                  <div/>, <div/>, <div/>,\n              ]}\n              size=\"small\"\n        >\n            <Row gutter={[0,0]} size = \"small\" >\n                <SearchNInput name = \"브랜드\" style={{ display: \"flex\"}}/>\n                <FromTo name = \"등록일자\"/>\n                <SearchNInput name = \"분류\"/>\n                <FromTo name = \"수정일자\"/>\n                <BODropdownHalf name = \"속성그룹\"/>\n                <BOInput name = \"수정자\"/>\n                <BODropdownHalf name = \"고시품목\"/>\n                <BOInput name = \"SAP코드\"/>\n                <BOInput name = \"상품명\"/>\n            </Row>\n        </Card>\n        <Row gutter={[0,24]}  style={{marginTop:10, marginBottom:10}}>\n            <Col span={1}>\n                <Button  textAlign={'left'} >상품 일괄 다운로드 </Button>\n            </Col>\n        </Row>\n        <Table columns={columns} size=\"small\"/>\n    </>\n    );\n}\n","import React from 'react';\nimport {\n    Form,\n    Typography,\n    Dropdown, Menu, message, Col,\n} from \"antd\";\nimport {UserOutlined} from \"@ant-design/icons\";\n\nexport default function BODropdownLine(props){\n\n    function handleMenuClick(e) {\n        message.info('Click on menu item.');\n        console.log('click', e);\n    }\n    const ColFormStyle = {\n        border:'none',\n    };\n\n    function handleButtonClick(e) {\n        message.info('Click on left button.');\n        console.log('click left button', e);\n    }\n    const menu = (\n        <Menu onClick={handleMenuClick}>\n            <Menu.Item key=\"1\" icon={<UserOutlined />}>\n                1st menu item\n            </Menu.Item>\n            <Menu.Item key=\"2\" icon={<UserOutlined />}>\n                2nd menu item\n            </Menu.Item>\n            <Menu.Item key=\"3\" icon={<UserOutlined />}>\n                3rd menu item\n            </Menu.Item>\n        </Menu>\n    );\n    return (\n        <>\n            <Col span={12}   style={{textAlign: 'center'}} size = \"small\">\n                <Typography.Title  level={5}>{props.name}</Typography.Title>\n            </Col>\n            <Col span={12} style={ColFormStyle} align={\"left\"}>\n                <Form.Item style = {{ margin: 5, padding: 0}}>\n                    <Dropdown.Button onClick={handleButtonClick} overlay={menu} size = \"small\">\n                        hello\n                    </Dropdown.Button>\n                </Form.Item>\n            </Col>\n\n        </>\n    );\n}\n","import React from 'react';\nimport {\n    Col,\n\n    Form,\n    Input,\n    Typography,\n} from \"antd\";\n\n\nexport default function BOEmpty(props){\n    return (\n        <>\n            <Col span={3}/>\n            <Col span={9}/>\n        </>\n    );\n}\n","import React from 'react';\nimport {\n    Col,\n\n    Typography,\n} from \"antd\";\n\n\nexport default function PropertyData(props){\n    return (\n        <>\n            <Col span={props.span} textAlign={'left'}  style={{textAlign: 'left'}} >\n                <Typography.Title level={5} style={{margin:10}}>{props.text} </Typography.Title>\n            </Col>\n        </>\n    );\n}\n","import React from 'react';\nimport {\n    Form,\n    Typography,\n    Dropdown, Menu, message, Col,\n} from \"antd\";\nimport {UserOutlined} from \"@ant-design/icons\";\nimport PropertyTitle from \"../Text/PropertyTitle\";\nimport PropertyData from \"../Text/PropertyData\";\n\nexport default function BOViewHalfLine(props){\n\n    return (\n        <>\n            <PropertyTitle text = {props.name}/>\n            <PropertyData text = \"0\" span = \"8\"/>\n       </>\n    );\n}\n","import React from 'react';\nimport {\n    Button, Card,\n    Col,\n    Divider,\n    Form, Input,\n    Row,\n    Space,\n    Table,\n    Typography\n} from \"antd\";\nimport {CheckOutlined, LockOutlined, RedoOutlined} from \"@ant-design/icons\";\nimport SearchNInput from \"../component/Input/SearchNInput\";\nimport FromTo from \"../component/Input/FromTo\";\nimport BODropdownHalf from \"../component/Input/BODropdownHalf\";\nimport BOInput from \"../component/Input/BOInput\";\nimport BODropdownLine from \"../component/Input/BODropdownLine\";\nimport BOEmpty from \"../component/Input/BOEmpty\";\nimport BOViewHalfLine from \"../component/Input/BOViewHalfLine\";\n\n\n\nexport default function BatchUpdate(props){\n    const { Column, ColumnGroup } = Table;\n\n    const columns = [\n        {\n            title: '번호',\n            dataIndex: 'no',\n            key: 'no',\n            column: [\n                {\n                    title: '번호',\n                    dataIndex: 'no',\n                    key: 'no',\n                },\n                {\n                    title: '번호',\n                    dataIndex: 'no',\n                    key: 'no',\n                }\n                ]\n        },\n        {\n            title: '등록일',\n            dataIndex: 'regDate',\n            key: 'regDate',\n        },\n        {\n            title: '작업상태',\n            dataIndex: 'status',\n            key: 'status',\n        },\n        {\n            title: '시작일시',\n            dataIndex: 'startDate',\n            key: 'startDate',\n        },\n        {\n            title: '종료일시',\n            dataIndex: 'endDate',\n            key: 'endDate',\n        },\n    ];\n    return (\n    <>\n        <Card title=\"상품 정보 일괄 등록\" size=\"small\">\n            <Card title = \"최근 업로드 작업\" size=\"small\">\n                <Table columns={columns} size=\"small\"/>\n            </Card>\n            <Row  style = {{ padding:\"10px\"}} size=\"small\">\n                <BODropdownHalf name =\"고시품목 선택\"></BODropdownHalf>\n                <BOEmpty/>\n                <BODropdownHalf name =\"파일 선택\"></BODropdownHalf>\n                <Col span={9}>\n                    <Row>\n                        <Col span={12}>\n                            <Button icon = {<LockOutlined />} block>검증</Button>\n                        </Col>\n                        <Col span={12}>\n                            <Button icon = {<LockOutlined />} block>양식 다운로드</Button>\n                        </Col>\n                    </Row>\n                </Col>\n                <Col span={3}/>\n                <BOViewHalfLine name = \"총 건수\"/>\n                <BOViewHalfLine name = \"불가건수\"/>\n            </Row>\n\n            <Table  scroll={{ x: 1500 }} size = \"small\">\n                <ColumnGroup title=\"처리결과\">\n                    <Column title=\"처리가능여부\" dataIndex=\"firstName\" key=\"firstName\" />\n                    <Column title=\"오류내용\" dataIndex=\"lastName\" key=\"lastName\" />\n                </ColumnGroup>\n                <Column title=\"SAP 코드\" dataIndex=\"age\" key=\"age\" />\n                <ColumnGroup title=\"상품 고시 정보\">\n                    <Column title=\"용량\" dataIndex=\"firstName\" key=\"firstName\" />\n                    <Column title=\"제품주요사용처\" dataIndex=\"lastName\" key=\"lastName\" />\n                    <Column title=\"사용기한\" dataIndex=\"firstName\" key=\"firstName\" />\n                    <Column title=\"사용방법\" dataIndex=\"lastName\" key=\"lastName\" />\n                    <Column title=\"제조사 및 제조..\" dataIndex=\"firstName\" key=\"firstName\" />\n                    <Column title=\"제조국\" dataIndex=\"lastName\" key=\"lastName\" />\n                    <Column title=\"전성분\" dataIndex=\"firstName\" key=\"firstName\" />\n                    <Column title=\"기능성 화장..\" dataIndex=\"lastName\" key=\"lastName\" />\n                    <Column title=\"사용할때 주..\" dataIndex=\"firstName\" key=\"firstName\" />\n                    <Column title=\"품질 보증기준\" dataIndex=\"lastName\" key=\"lastName\" />\n                    <Column title=\"소비자 상담\" dataIndex=\"firstName\" key=\"firstName\" />\n                    <Column title=\"오류내용\" dataIndex=\"lastName\" key=\"lastName\" />\n                </ColumnGroup>\n            </Table>\n        </Card>\n    </>\n    );\n}\n","import React from 'react';\nimport {\n    Form,\n    Typography,\n    Dropdown, Menu, message, Col, Input,\n} from \"antd\";\nimport {UserOutlined} from \"@ant-design/icons\";\nimport PropertyTitle from \"../Text/PropertyTitle\";\n\nexport default function BODropdownNInputHalf(props){\n\n    function handleMenuClick(e) {\n        message.info('Click on menu item.');\n        console.log('click', e);\n    }\n    const ColFormStyle = {\n        border:'none',\n    };\n\n    function handleButtonClick(e) {\n        message.info('Click on left button.');\n        console.log('click left button', e);\n    }\n    const menu = (\n        <Menu onClick={handleMenuClick}>\n            <Menu.Item key=\"1\" icon={<UserOutlined />}>\n                1st menu item\n            </Menu.Item>\n            <Menu.Item key=\"2\" icon={<UserOutlined />}>\n                2nd menu item\n            </Menu.Item>\n            <Menu.Item key=\"3\" icon={<UserOutlined />}>\n                3rd menu item\n            </Menu.Item>\n        </Menu>\n    );\n    return (\n        <>\n            <PropertyTitle text = {props.name}/>\n            <Col span={3} style={ColFormStyle} align={\"left\"}>\n                <Form.Item style = {{ margin: 5, padding: 0}}>\n                    <Dropdown.Button onClick={handleButtonClick} overlay={menu} size=\"small\">\n                        hello world\n                    </Dropdown.Button>\n                </Form.Item>\n            </Col>\n            <Col span={5} style={ColFormStyle} align={\"left\"}>\n                <Form.Item style = {{ margin: 5, padding: 0}}>\n                    <Input size=\"small\"/>\n                </Form.Item>\n            </Col>\n\n        </>\n    );\n}\n","import React from 'react';\nimport {\n    Button, Card,\n    Col,\n    Divider,\n    Form, Input,\n    Row,\n    Space,\n    Table,\n    Typography\n} from \"antd\";\nimport {CheckOutlined, LockOutlined, RedoOutlined} from \"@ant-design/icons\";\nimport SearchNInput from \"../component/Input/SearchNInput\";\nimport FromTo from \"../component/Input/FromTo\";\nimport BODropdownHalf from \"../component/Input/BODropdownHalf\";\nimport BOInput from \"../component/Input/BOInput\";\nimport BODropdownLine from \"../component/Input/BODropdownLine\";\nimport BOEmpty from \"../component/Input/BOEmpty\";\nimport BOViewHalfLine from \"../component/Input/BOViewHalfLine\";\nimport BODropdownNInputHalf from \"../component/Input/BODropdownNInputHalf\";\n\n\n\nexport default function MallInfo(props){\n    const { Column, ColumnGroup } = Table;\n\n    const columns = [\n        {\n            title: '번호',\n            dataIndex: 'no',\n            key: 'no',\n        },\n        {\n            title: '상품명',\n            dataIndex: 'prodName',\n            key: 'prodName',\n        },\n        {\n            title: 'SAP코드',\n            dataIndex: 'SAPCode',\n            key: 'SAPCode',\n        },\n        {\n            title: '브랜드',\n            dataIndex: 'brand',\n            key: 'brand',\n        },\n        {\n            title: '몰명',\n            dataIndex: 'mallName',\n            key: 'mallName',\n        },\n        {\n            title: '몰상품코드',\n            dataIndex: 'mallProdCode',\n            key: 'mallProdCode',\n        },\n        {\n            title: '몰상품명',\n            dataIndex: 'mallProdName',\n            key: 'mallProdName',\n        },\n        {\n            title: '등록일시',\n            dataIndex: 'regDate',\n            key: 'regDate',\n        },\n    ];\n    return (\n    <>\n        <Card title=\"몰 상품정보 관리\"\n              actions={[\n                  <div/>, <div/>, <div/>,\n                  <Button icon={<RedoOutlined />}> 초기화 </Button>,\n                  <Button icon = {<CheckOutlined />}> 조회 </Button>,\n                  <div/>, <div/>, <div/>,\n              ]}\n              size=\"small\"\n        >\n            <Row  style = {{ padding:\"10px\"}}>\n                <BODropdownHalf name =\"Mall 명\"></BODropdownHalf>\n                <BOInput name = \"상품명\"/>\n                <BODropdownNInputHalf name = \"상품코드\"/>\n            </Row>\n        </Card>\n        <Table columns={columns} size = \"small\"/>\n    </>\n    );\n}\n","import React from 'react';\nimport {\n    Button, Card,\n    Col,\n    Row,\n    Table,\n} from \"antd\";\nimport {CheckOutlined, LockOutlined, RedoOutlined} from \"@ant-design/icons\";\nimport BOInput from \"../component/Input/BOInput\";\nimport BORadio from \"../component/Input/BOInput\";\nimport BODropdownHalf from \"../component/Input/BODropdownHalf\";\n\nexport default function InterfaceResult(props){\n    const { Column, ColumnGroup } = Table;\n\n    const columns = [\n        {\n            title: 'No.',\n            dataIndex: 'no',\n            key: 'no',\n        },\n        {\n            title: 'I/F ID',\n            dataIndex: 'prodName',\n            key: 'prodName',\n        },\n        {\n            title: 'I/F ID명',\n            dataIndex: 'SAPCode',\n            key: 'SAPCode',\n        },\n        {\n            title: '송신 시스템',\n            dataIndex: 'brand',\n            key: 'brand',\n        },\n        {\n            title: '수신 시스템',\n            dataIndex: 'mallName',\n            key: 'mallName',\n        },\n        {\n            title: '송/수신 여부',\n            dataIndex: 'mallProdCode',\n            key: 'mallProdCode',\n        },\n        {\n            title: 'I/F 유형',\n            dataIndex: 'mallProdName',\n            key: 'mallProdName',\n        },\n        {\n            title: '전송주기',\n            dataIndex: 'regDate',\n            key: 'regDate',\n        },\n    ];\n    return (\n    <>\n        <Card title=\"I/F 결과관리\"\n              actions={[\n                  <div/>, <div/>, <div/>,\n                  <Button icon={<RedoOutlined />}> 초기화 </Button>,\n                  <Button icon = {<CheckOutlined />}> 조회 </Button>,\n                  <div/>, <div/>, <div/>,\n              ]}\n              size=\"small\"\n        >\n\n        <Row  style = {{ padding:\"10px\"}}>\n                <BOInput name = \"I/F ID\"/>\n                <BOInput name = \"I/F 명\"/>\n                <BOInput name = \"송신 시스템\"/>\n                <BOInput name = \"수신 시스템\"/>\n                <BODropdownHalf name=\"송/수신 여부\"/>\n                <BODropdownHalf name=\"I/F 유형\"/>\n            </Row>\n        </Card>\n        <Row gutter={[0,24]}  style={{marginTop:10, marginBottom:10}}>\n            <Col span={1}>\n                <Button  textAlign={'left'} >고시품목 등록 </Button>\n            </Col>\n        </Row>\n        <Table columns={columns} size=\"small\" />\n    </>\n    );\n}\n","import React from 'react';\nimport {\n    Col,\n\n    Form,\n    Input,\n    Typography,\n    Radio,\n} from \"antd\";\nimport PropertyTitle from \"../Text/PropertyTitle\";\n\n\nexport default function BORadio(props){\n    const onChange = () => {\n\n    }\n\n    return (\n        <>\n            <PropertyTitle text = {props.name}/>\n            <Col span={8} align={\"left\"}>\n                <Form.Item style = {{ margin: 5, padding: 0}}>\n                    <Radio.Group onChange={onChange} defaultValue={1}>\n                        <Radio value={1}>전체</Radio>\n                        <Radio value={2}>사용</Radio>\n                        <Radio value={3}>사용 안함</Radio>\n                    </Radio.Group>\n                </Form.Item>\n            </Col>\n\n        </>\n    );\n}\n","import React from 'react';\nimport {\n    Button, Card,\n    Col,\n    Row,\n    Table,\n} from \"antd\";\nimport {CheckOutlined, LockOutlined, RedoOutlined} from \"@ant-design/icons\";\nimport BOInput from \"../component/Input/BOInput\";\nimport BORadio from \"../component/Input/BORadio\";\n\nexport default function AttributeInfo(props){\n    const { Column, ColumnGroup } = Table;\n\n    const columns = [\n        {\n            title: '번호',\n            dataIndex: 'no',\n            key: 'no',\n        },\n        {\n            title: '고시품목ID',\n            dataIndex: 'prodName',\n            key: 'prodName',\n        },\n        {\n            title: '고시품목명',\n            dataIndex: 'SAPCode',\n            key: 'SAPCode',\n        },\n        {\n            title: '정렬순위',\n            dataIndex: 'brand',\n            key: 'brand',\n        },\n        {\n            title: '사용여부',\n            dataIndex: 'mallName',\n            key: 'mallName',\n        },\n        {\n            title: '고시항목ID',\n            dataIndex: 'mallProdCode',\n            key: 'mallProdCode',\n        },\n        {\n            title: '고시항목',\n            dataIndex: 'mallProdName',\n            key: 'mallProdName',\n        },\n        {\n            title: '정렬순위',\n            dataIndex: 'regDate',\n            key: 'regDate',\n        },\n        {\n            title: '사용여부',\n            dataIndex: 'regDate',\n            key: 'regDate',\n        },\n    ];\n    return (\n    <>\n        <Card title=\"몰 상품정보 관리\"\n              actions={[\n                  <div/>, <div/>, <div/>,\n                  <Button icon={<RedoOutlined />}> 초기화 </Button>,\n                  <Button icon = {<CheckOutlined />}> 조회 </Button>,\n                  <div/>, <div/>, <div/>,\n              ]}\n              size=\"small\"\n        >\n\n        <Row  style = {{ padding:\"10px\"}}>\n                <BOInput name = \"속성그룹명\"/>\n                <BOInput name = \"속성항목명\"/>\n                <BOInput name = \"속성그룹ID\"/>\n                <BOInput name = \"속성항목ID\"/>\n                <BORadio name = \"속성그룹 사용여부\" contents={[\"전체\", \"사용\", \"사용 안함\"]}/>\n                <BORadio name = \"속성항목 사용여부\" contents={[\"전체\", \"사용\", \"사용 안함\"]}/>\n                <BORadio name = \"속성그룹 변경여부\" contents={[\"전체\", \"가능\", \"불가능\"]}/>\n            </Row>\n        </Card>\n        <Row gutter={[0,24]}  style={{marginTop:10, marginBottom:10}}>\n            <Col span={1}>\n                <Button  textAlign={'left'}> 속성등록 </Button>\n            </Col>\n        </Row>\n        <Table columns={columns} size = \"small\"/>\n    </>\n    );\n}\n","import React from 'react';\nimport {\n    Button, Card,\n    Col,\n    Row,\n    Table,\n} from \"antd\";\nimport {CheckOutlined, LockOutlined, RedoOutlined} from \"@ant-design/icons\";\nimport BOInput from \"../component/Input/BOInput\";\nimport BORadio from \"../component/Input/BORadio\";\n\nexport default function NoticeInfo(props){\n    const { Column, ColumnGroup } = Table;\n\n    const columns = [\n        {\n            title: '번호',\n            dataIndex: 'no',\n            key: 'no',\n        },\n        {\n            title: '고시품목ID',\n            dataIndex: 'prodName',\n            key: 'prodName',\n        },\n        {\n            title: '고시품목명',\n            dataIndex: 'SAPCode',\n            key: 'SAPCode',\n        },\n        {\n            title: '정렬순위',\n            dataIndex: 'brand',\n            key: 'brand',\n        },\n        {\n            title: '사용여부',\n            dataIndex: 'mallName',\n            key: 'mallName',\n        },\n        {\n            title: '고시항목ID',\n            dataIndex: 'mallProdCode',\n            key: 'mallProdCode',\n        },\n        {\n            title: '고시항목',\n            dataIndex: 'mallProdName',\n            key: 'mallProdName',\n        },\n        {\n            title: '정렬순위',\n            dataIndex: 'regDate',\n            key: 'regDate',\n        },\n        {\n            title: '사용여부',\n            dataIndex: 'regDate',\n            key: 'regDate',\n        },\n    ];\n    return (\n    <>\n        <Card title=\"몰 상품정보 관리\"\n              actions={[\n                  <div/>, <div/>, <div/>,\n                  <Button icon={<RedoOutlined />}> 초기화 </Button>,\n                  <Button icon = {<CheckOutlined />}> 조회 </Button>,\n                  <div/>, <div/>, <div/>,\n              ]}\n              size=\"small\"\n        >\n\n        <Row  style = {{ padding:\"10px\"}}>\n                <BOInput name = \"고시품목명\"/>\n                <BOInput name = \"고시항목명\"/>\n                <BOInput name = \"고시품목ID\"/>\n                <BOInput name = \"고시항목ID\"/>\n                <BORadio name = \"고시품목 사용여부\" contents={[\"전체\", \"사용\", \"사용 안함\"]}/>\n                <BORadio name = \"고시항목 사용여부\" contents={[\"전체\", \"사용\", \"사용 안함\"]}/>\n            </Row>\n\n        </Card>\n        <Row gutter={[0,24]}  style={{marginTop:10, marginBottom:10}}>\n            <Col span={1}>\n                <Button  textAlign={'left'}> 고시품목등록 </Button>\n            </Col>\n        </Row>\n        <Table columns={columns} size = \"small\"/>\n    </>\n    );\n}\n","import React from 'react';\nimport {\n    Col,\n\n    Form,\n    Input,\n    Typography,\n} from \"antd\";\nimport PropertyTitle from \"../Text/PropertyTitle\";\n\n\nexport default function BOInputFull(props){\n    return (\n        <>\n            <Col span={12}   style={{textAlign: 'center'}} >\n                <Typography.Title level={5} style={{margin:10}} size = \"small\">{props.name} </Typography.Title>\n            </Col>\n\n            <Col span={12} align={\"left\"}>\n                <Form.Item style = {{ margin: 5, padding: 0}}>\n                    <Input size = \"small\"/>\n                </Form.Item>\n            </Col>\n\n        </>\n    );\n}\n","import React from 'react';\nimport {\n    Button, Card,\n    Col, Input,\n    Row,\n    Table,\n} from \"antd\";\nimport {\n    CheckOutlined,\n    LockOutlined,\n    MinusOutlined,\n    PlusOutlined,\n    RedoOutlined, ReloadOutlined,\n    SaveOutlined,\n    SearchOutlined\n} from \"@ant-design/icons\";\nimport BOInput from \"../component/Input/BOInput\";\nimport BORadio from \"../component/Input/BORadio\";\nimport BOEmpty from \"../component/Input/BOEmpty\";\nimport BODropdownLine from \"../component/Input/BODropdownLine\";\nimport BOInputFull from \"../component/Input/BOInputFull\";\nimport BODropdownHalf from \"../component/Input/BODropdownHalf\";\n\nexport default function SynonymDic(props){\n    const { Column, ColumnGroup } = Table;\n\n    const columns = [\n        {\n            title: '동의어키워드값',\n            dataIndex: 'no',\n            key: 'no',\n        },\n        {\n            title: '언어코드',\n            dataIndex: 'prodName',\n            key: 'prodName',\n        },\n        {\n            title: '동의어 리스트',\n            dataIndex: 'SAPCode',\n            key: 'SAPCode',\n        },\n    ];\n\n    const columns2 = [\n        {\n            title: 'check',\n            dataIndex: 'name',\n        },\n        {\n            title: '동의어키워드값',\n            dataIndex: 'age',\n        },\n        {\n            title: '언어코드',\n            dataIndex: 'address',\n        },\n    ];\n    return (\n    <>\n        <Row>\n            <Col span={14}>\n                <Card title = \"동의어 사전\"\n                      actions={[\n                          <div/>, <div/>,\n                          <Button icon={<PlusOutlined />}>추가</Button>,\n                          <Button icon={<MinusOutlined />}>삭제</Button>,\n                          <Button icon={<SaveOutlined />}>저장</Button>,\n                          <Button icon={<ReloadOutlined />}>초기화</Button>,\n                          <div/>, <div/>,\n                      ]}\n                      size=\"small\"\n                >\n\n                <Row>\n                        <Col><Button icon={<CheckOutlined />}>사전 유효성 검사</Button></Col>\n                        <Col><Button icon={<SaveOutlined />}>CSV 다운로드</Button></Col>\n                        <Col><Button icon={<SaveOutlined />}>TXT 다운로드</Button></Col>\n                        <Col><Button icon={<SaveOutlined />}>CSV Import </Button></Col>\n                        <Col><Input size = \"small\" style={{margin:\"4px\"}}/></Col>\n                        <Col><Button size=\"small\" style={{margin:\"4px\"}}>찾아보기</Button></Col>\n                    </Row>\n\n                    <Row>\n                        <BOInput name = \"동의어 검색\"/>\n                        <Col span={12}>\n                            <Button icon={<SearchOutlined/>} size=\"small\" style={{marginTop:\"4px\"}}> 검색 </Button>\n                        </Col>\n                    </Row>\n\n                </Card>\n                <Table columns={columns} size = \"small\" style = {{marginTop:15}}/>\n\n            </Col>\n            <Col span={10}>\n                <Card title = \"동의어 변경\" size = \"small\">\n                    <Row>\n                        <BOInputFull name=\"동의어키워드값:\"/>\n                        <BODropdownLine name=\"언어코드:\" />\n                    </Row>\n                    <Table columns={columns2}  style = {{marginTop:15}}/>\n                </Card>\n            </Col>\n        </Row>\n    </>\n    );\n}\n","import React, {useEffect, useState} from 'react';\nimport {\n    Button, Card,\n    Row, Table, Form, Input, InputNumber, Col, Typography, Calendar\n} from \"antd\";\n\nimport moment from 'moment';\nimport { DatePicker, Space } from 'antd';\nimport axios from \"axios\";\nimport { Pagination } from 'antd';\nimport FileSaver from 'file-saver';\n\nconst { Title, Text, Link } = Typography;\n\n\nexport default function AsyncTable(props){\n    return (\n        <>\n                <Pagination\n                    current={props.asyncCurrent}\n                    total={props.asyncTotal}\n                    pageSize={props.asyncPageSize}\n                    showSizeChanger = {false}\n                    showTotal={ (total)  => `[${props.searchDate}] Total ${props.asyncTotal} items`}\n                    onChange={props.asyncOnChange}\n                /><br/>\n\n                <Table columns={props.asyncColumns}\n                       dataSource={props.asyncDataSource}\n                       pagination={props.asyncPagination}\n                       size=\"small\"  scroll={props.asyncScroll}/>\n\n        </>\n    );\n}\n","import React, {useEffect, useState} from 'react';\nimport {\n    Button, Card,\n    Row, Table, Form, Input, InputNumber, Col, Typography, Calendar\n} from \"antd\";\n\nimport moment from 'moment';\nimport { DatePicker, Space } from 'antd';\nimport axios from \"axios\";\nimport { Pagination } from 'antd';\nimport FileSaver from 'file-saver';\nimport AsyncTable from \"./AsyncTable\";\n\n\nconst { Title, Text, Link } = Typography;\n\n\nexport default function PriceInfo(props){\n    const [productForm] = Form.useForm();\n    const [searchResult, setSearchResult] = useState([]);\n    const [searchResultDate, setSearchResultDate] = useState(\"\");\n\n    const [searchTotal, setSearchTotal] = useState(0);\n    const [searchCurrent, setSearchCurrent] = useState(1);\n    const [searchPageSize, setSearchPageSize] = useState(20);\n\n    const [historyTotal, setHistoryTotal] = useState(0);\n    const [historyCurrent, setHistoryCurrent] = useState(1);\n    const [historyPageSize, setHistoryPageSize] = useState(20);\n\n    const [fromDate, setFromDate] = useState(\"\");\n    const [toDate, setToDate] = useState(\"\");\n    const [historyResult, setHistoryResult] = useState([]);\n\n    const ordDTOColumns = [\n        {\n            title: '거래처코드',\n            dataIndex: 'prtnId',\n            key: 'prtnId',\n        },\n        {\n            title: '거래처명',\n            dataIndex: 'prtnNm',\n            key: 'prtnNm',\n        },\n        {\n            title: '결제일자',\n            dataIndex: 'stlmDttm',\n            key: 'stlmDttm',\n        },\n        {\n            title: '주문번호',\n            dataIndex: 'dbpaB2cMallOrdNo',\n            key: 'dbpaB2cMallOrdNo',\n        },\n        {\n            title: '상품번호',\n            dataIndex: 'dbpaB2cMallPrdNo',\n            key: 'dbpaB2cMallPrdNo',\n        },\n        {\n            title: '상품명',\n            dataIndex: 'dispPrdNm',\n            key: 'dispPrdNm',\n        },\n\n        {\n            title: '옵션명',\n            dataIndex: 'prdOptnNm',\n            key: 'prdOptnNm',\n        },\n        {\n            title: '주문수량',\n            dataIndex: 'ordPrdQty',\n            key: 'ordPrdQty',\n        },\n        {\n            title: '옵션가격',\n            dataIndex: 'optnPrdAmt',\n            key: 'optnPrdAmt',\n        },\n        {\n            title: '총할인액',\n            dataIndex: 'ttOrdPrdDcAmt',\n            key: 'ttOrdPrdDcAmt',\n        },\n        {\n            title: '상품별할인금액',\n            dataIndex: 'prdTtDcAmt',\n            key: 'prdTtDcAmt',\n        },\n        {\n            title: '쿠폰등 할인금액',\n            dataIndex: 'cpnAplyDcAmt',\n            key: 'cpnAplyDcAmt',\n        },\n        {\n            title: '주문별 총주문금액',\n            dataIndex: 'ordPrdAmt',\n            key: 'ordPrdAmt',\n        },\n        {\n            title: '배송비',\n            dataIndex: 'dlcsAmt',\n            key: 'dlcsAmt',\n        },\n        {\n            title: '실구매금액',\n            dataIndex: 'realPurAmt',\n            key: 'realPurAmt',\n        },\n\n        {\n            title: '자재코드',\n            dataIndex: 'prdCd',\n            key: 'prdCd',\n        },\n        {\n            title: '자재명',\n            dataIndex: 'prdNm',\n            key: 'prdNm',\n        },\n        {\n            title: '소비자가',\n            dataIndex: 'cnsmAmt',\n            key: 'cnsmAmt',\n        },\n        {\n            title: '비중',\n            dataIndex: 'purPrdPrt',\n            key: 'purPrdPrt',\n        },\n        {\n            title: '1EA 당 환산',\n            dataIndex: 'prdUtprConvAmt',\n            key: 'prdUtprConvAmt',\n        },\n        {\n            title: '할인율',\n            dataIndex: 'dcRt',\n            key: 'dcRt',\n        },\n\n    ];\n\n    const searchClick = (enabled, date, page) => {\n\n        let offset = 1;\n        if ( typeof(page) === \"number\"){\n            offset = page;\n        }\n        //     const url = \"https://i-dev-piboapi.amorepacific.com/pibo/dbpa/ord-price-result?date=2021-12-06&offset=\" + String(offset);\n        //\n\n        console.log(enabled, date)\n        if (!enabled)\n            return;\n        const url = `https://i-dev-piboapi.amorepacific.com/pibo/dbpa/ord-price-result?date=${String(date)}&offset=${String(offset)}`;\n\n        // const url = \"https://i-dev-piboapi.amorepacific.com/pibo/dbpa/ord-price-result?date=\" + String(date) + '';\n        // const url = \"https://i-dev-piboapi.amorepacific.com/pibo/dbpa/ord-price-result?date=2021-12-06\";\n        axios.defaults.headers.common['Authorization'] =  `Bearer ${props.myCookies.get('pauth')}`;\n        axios({\n            method: 'get',\n            url: url,\n        }).then(function (response) {\n            makeSearchResult(response?.data, date)\n        }).catch(function (error) {\n            console.log(error);\n            if (error.response) {\n                // 요청이 이루어졌으며 서버가 2xx의 범위를 벗어나는 상태 코드로 응답했습니다.\n                console.log(error.response.data);\n                console.log(error.response.status);\n                console.log(error.response.headers);\n            } else if (error.request) {\n                // 요청이 이루어 졌으나 응답을 받지 못했습니다.\n                // `error.request`는 브라우저의 XMLHttpRequest 인스턴스 또는\n                // Node.js의 http.ClientRequest 인스턴스입니다.\n                console.log(error.request);\n                console.log(error)\n            } else {\n                // 오류를 발생시킨 요청을 설정하는 중에 문제가 발생했습니다.\n                console.log('Error', error.message);\n            }\n        });\n\n    }\n\n    const taskColumns = [\n        {\n            title: '닐짜',\n            dataIndex: 'date',\n            key: 'date',\n        },\n        {\n            title: '진행 상태',\n            dataIndex: 'status',\n            key: 'status',\n        },\n        {\n            title: 'Action',\n            dataIndex: 'downloadFlg',\n            key: 'downloadFlg',\n            render: (text,record) => <>\n                {/*{alert(text)}*/}\n                <Button disabled={!text}\n                        onClick = {() => searchClick(text, record.date, 1)}\n                > 조회 </Button>\n                <Button disabled={!text} onClick={() => excelDownloadClick(record.date)}>엑셀 다운로드 </Button>\n            </>,\n        },\n    ];\n\n\n    useEffect(() => {\n        productForm.setFieldsValue({\n            form_date: getToday(),\n            form_market: '',\n            form_prod_no:'',\n            form_brand:'',\n            form_prod:'',\n            form_price:0,\n    });\n    }, []);\n\n    const layout = {\n        labelCol: { span: 4 },\n        wrapperCol: { span: 12 },\n    };\n\n    const validateMessages = {\n        required: '${label} is required!',\n        types: {\n            email: '${label} is not a valid email!',\n            number: '${label} is not a valid number!',\n        },\n        number: {\n            range: '${label} must be between ${min} and ${max}',\n        },\n    };\n\n    const onFinish = (values: any) => {\n        console.log(values);\n        const fieldValue = productForm.getFieldsValue();\n        console.log(fieldValue)\n    };\n\n\n    const getToday = () => {\n        const d = new Date();\n        return  d.getFullYear() + '/' + (d.getMonth()+1) + '/' + d.getDate();\n    }\n    const registerProduct = () => {\n        const fieldValue = productForm.getFieldsValue();\n\n        // alert(fieldValue?.form_date);\n\n    }\n\n    const onSaveClick = () => {\n        const fieldValue = productForm.getFieldsValue();\n        // alert('abao')\n        console.log(fieldValue)\n    }\n\n    const { RangePicker } = DatePicker;\n\n    const dateFormat = 'YYYY/MM/DD';\n    const weekFormat = 'MM/DD';\n    const monthFormat = 'YYYY/MM';\n\n    const dateFormatList = ['DD/MM/YYYY', 'DD/MM/YY'];\n\n    const customFormat = value => `custom format: ${value.format(dateFormat)}`;\n\n    const customWeekStartEndFormat = value =>\n        `${moment(value).startOf('week').format(weekFormat)} ~ ${moment(value)\n            .endOf('week')\n            .format(weekFormat)}`;\n\n    const addSearchResult = (record) => {\n        // alert(JSON.stringify(record))\n        let r = JSON.parse(JSON.stringify(searchResult))\n        // alert(JSON.stringify(record))\n        // alert(JSON.stringify(r))\n        r.push(record)\n        setSearchResult(r)\n\n    }\n    const addEachResult = (currentValue, index) => {\n\n        let result = currentValue;\n        const ordItemList = currentValue?.ordItemList;\n        if (!result) return;\n        delete result?.ordItemList;\n\n        let refSearchResult = new Array();\n        ordItemList.forEach((value, index, array)=>{\n            const record = Object.assign(currentValue, value)\n            refSearchResult.push(JSON.parse(JSON.stringify(record)))\n        });\n\n        setSearchResult(Object.assign(searchResult, refSearchResult));\n    }\n\n    const makeSearchResult = (result, date) => {\n        if (!result?.ordPriceList)\n            return;\n        let refSearchResult = new Array();\n\n        // alert(JSON.stringify(result));\n        setSearchCurrent(result?.offset);\n        setSearchTotal(result?.total);\n        setSearchPageSize(result?.limit);\n\n        result?.ordPriceList.forEach((value, index, array)=>{\n            const ordItemList = value?.ordItemList;\n            delete value?.ordItemList;\n            let isFirst = true;\n\n            ordItemList.forEach((value2, index2, array2)=>{\n                if (isFirst){\n                    isFirst = false;\n                    const record = Object.assign(value, value2)\n                    refSearchResult.push(JSON.parse(JSON.stringify(record)))\n                } else {\n                    let record = Object.assign({}, value2)\n                    refSearchResult.push(JSON.parse(JSON.stringify(record)))\n                }\n            });\n        });\n        setSearchResultDate(date);\n        setSearchResult(refSearchResult);\n    }\n\n    const sampleDownloadClick = () => {\n        const url = 'https://i-dev-piboapi.amorepacific.com/pibo/dbpa/download/ord-price-result?date=2021-12-06';\n\n        axios.defaults.headers.common['Authorization'] =  `Bearer ${props.myCookies.get('pauth')}`;\n        axios({\n            method: 'get',\n            url: url,\n            responseType: 'arraybuffer',\n        }).then(function (response) {\n            console.log(response?.data)\n            const blob = new Blob([response?.data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n            FileSaver.saveAs(blob, 'result_2021-12-06.xlsx');\n        }).catch(function (error) {\n            console.log(error);\n            // alert(JSON.stringify(error.response?.data))\n            if (error.response) {\n                // 요청이 이루어졌으며 서버가 2xx의 범위를 벗어나는 상태 코드로 응답했습니다.\n                console.log(error.response.data);\n                console.log(error.response.status);\n                console.log(error.response.headers);\n            } else if (error.request) {\n                // 요청이 이루어 졌으나 응답을 받지 못했습니다.\n                // `error.request`는 브라우저의 XMLHttpRequest 인스턴스 또는\n                // Node.js의 http.ClientRequest 인스턴스입니다.\n                console.log(error.request);\n                console.log(error)\n            } else {\n                // 오류를 발생시킨 요청을 설정하는 중에 문제가 발생했습니다.\n                console.log('Error', error.message);\n            }\n        });\n\n\n    }\n    const excelDownloadClick = (date) => {\n        // const url = 'https://i-dev-piboapi.amorepacific.com/pibo/dbpa/download/ord-price-result?date=\" + date2021-12-06';\n        const url = \"https://i-dev-piboapi.amorepacific.com/pibo/dbpa/download/ord-price-result?date=\" + date;\n\n        axios.defaults.headers.common['Authorization'] = `Bearer ${props.myCookies.get('pauth')}`;\n        axios({\n            method: 'get',\n            url: url,\n            responseType: 'arraybuffer',\n        }).then(function (response) {\n            console.log(response?.data)\n            const blob = new Blob([response?.data], {type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'});\n            FileSaver.saveAs(blob, `result_${date}.xlsx`);\n        }).catch(function (error) {\n            console.log(error);\n            // alert(JSON.stringify(error.response?.data))\n            if (error.response) {\n                // 요청이 이루어졌으며 서버가 2xx의 범위를 벗어나는 상태 코드로 응답했습니다.\n                console.log(error.response.data);\n                console.log(error.response.status);\n                console.log(error.response.headers);\n            } else if (error.request) {\n                // 요청이 이루어 졌으나 응답을 받지 못했습니다.\n                // `error.request`는 브라우저의 XMLHttpRequest 인스턴스 또는\n                // Node.js의 http.ClientRequest 인스턴스입니다.\n                console.log(error.request);\n                console.log(error)\n            } else {\n                // 오류를 발생시킨 요청을 설정하는 중에 문제가 발생했습니다.\n                console.log('Error', error.message);\n            }\n        });\n    }\n    // const sampleSearchClick = (page) => {\n    //     let offset = 1;\n    //     if ( typeof(page) === \"number\"){\n    //         offset = page;\n    //     }\n    //     const url = \"https://i-dev-piboapi.amorepacific.com/pibo/dbpa/ord-price-result?date=2021-12-06&offset=\" + String(offset);\n    //\n    //     axios.defaults.headers.common['Authorization'] =  `Bearer ${props.myCookies.get('pauth')}`;\n    //     axios({\n    //         method: 'get',\n    //         url: url,\n    //     }).then(function (response) {\n    //         makeSearchResult(response?.data)\n    //     }).catch(function (error) {\n    //         console.log(error);\n    //         // alert(JSON.stringify(error.response?.data))\n    //         if (error.response) {\n    //             // 요청이 이루어졌으며 서버가 2xx의 범위를 벗어나는 상태 코드로 응답했습니다.\n    //             console.log(error.response.data);\n    //             console.log(error.response.status);\n    //             console.log(error.response.headers);\n    //         } else if (error.request) {\n    //             // 요청이 이루어 졌으나 응답을 받지 못했습니다.\n    //             // `error.request`는 브라우저의 XMLHttpRequest 인스턴스 또는\n    //             // Node.js의 http.ClientRequest 인스턴스입니다.\n    //             console.log(error.request);\n    //             console.log(error)\n    //         } else {\n    //             // 오류를 발생시킨 요청을 설정하는 중에 문제가 발생했습니다.\n    //             console.log('Error', error.message);\n    //         }\n    //     });\n    // }\n    function onPanelChange(value, mode) {\n        console.log(value.format('YYYY-MM-DD'), mode);\n    }\n\n    const onRangePickerChange = (dates, dateStrings) => {\n        console.log('From: ', dates[0], ', to: ', dates[1]);\n        console.log('From: ', dateStrings[0], ', to: ', dateStrings[1]);\n        setFromDate(dateStrings[0]);\n        setToDate(dateStrings[1]);\n    }\n\n    const makeHistoryTable = (data) =>{\n        // alert(JSON.stringify(data.history))\n        setHistoryResult(JSON.parse(JSON.stringify(data.history)));\n    }\n\n    const onSearchClick = () => {\n        if (!fromDate){\n            alert(\"시작 날짜를 넣아주세요.\");\n            return;\n        }\n        if (!toDate){\n            alert(\"종료 날짜를 넣아주세요.\");\n            return;\n        }\n\n        const url = `https://i-dev-piboapi.amorepacific.com/pibo/dbpa/ord-price-result/history?startDate=${fromDate}&endDate=${toDate}`;\n\n        axios.defaults.headers.common['Authorization'] =  `Bearer ${props.myCookies.get('pauth')}`;\n        axios({\n            method: 'get',\n            url: url,\n        }).then(function (response) {\n            makeHistoryTable(response?.data);\n        }).catch(function (error) {\n            console.log(error);\n            // alert(JSON.stringify(error.response?.data))\n            if (error.response) {\n                // 요청이 이루어졌으며 서버가 2xx의 범위를 벗어나는 상태 코드로 응답했습니다.\n                console.log(error.response.data);\n                console.log(error.response.status);\n                console.log(error.response.headers);\n            } else if (error.request) {\n                // 요청이 이루어 졌으나 응답을 받지 못했습니다.\n                // `error.request`는 브라우저의 XMLHttpRequest 인스턴스 또는\n                // Node.js의 http.ClientRequest 인스턴스입니다.\n                console.log(error.request);\n                console.log(error)\n            } else {\n                // 오류를 발생시킨 요청을 설정하는 중에 문제가 발생했습니다.\n                console.log('Error', error.message);\n            }\n        });\n    }\n\n\n    return (\n    <>\n        <Card title=\"가격 할인율 이력 조회\" type = \"inner\"\n              // actions={[\n              //     <div/>, <div/>, <div/>,\n              //     <Button icon = {<CheckOutlined />} onClick={() => {}}> 엑셀 다운로드 </Button>,\n              //     <div/>, <div/>, <div/>,\n              // ]}\n        >\n\n            <Space direction={\"horizontal\"}>\n                <RangePicker onChange={onRangePickerChange}/>\n            <Button onClick={onSearchClick}> 조   회 </Button>\n            </Space>\n            <br/><br/>\n\n            <Table columns={taskColumns}\n                   dataSource={historyResult}\n                   pagination={{\n                       pageSize: 1000,\n                       hideOnSinglePage: true}\n                   }\n                   size=\"small\" />\n            <br/><br/>\n\n            {/*<Button onClick={sampleSearchClick}>샘플 조회</Button> <Button onClick={sampleDownloadClick}>샘플 다운로드</Button>*/}\n\n            <AsyncTable\n                asyncCurrent={searchCurrent}\n                asyncTotal={searchTotal}\n                asyncPageSize={searchPageSize}\n                asyncOnChange={(page, pageSize) => {\n                    searchClick(true, searchResultDate, page);\n                }}\n\n\n                asyncColumns={ordDTOColumns}\n                asyncDataSource = {searchResult}\n                searchDate = {searchResultDate}\n                asyncPagination = {{\n                    pageSize: 1000,\n                    hideOnSinglePage: true\n                }}\n                asyncScroll={{ x: 2800 }}\n        />\n\n        </Card>\n\n\n    </>\n    );\n}\n","import React, {useEffect, useState} from 'react';\nimport {\n    Button, Card,\n    Row, Table, Form, Input, InputNumber, Col, Typography\n} from \"antd\";\nimport {CheckOutlined,RedoOutlined } from \"@ant-design/icons\";\nimport BOInput from \"../component/Input/BOInput\";\n\nimport moment from 'moment';\nimport BOInputFull from \"../component/Input/BOInputFull\";\nimport PropertyTitle from \"../component/Text/PropertyTitle\";\nimport { Upload, message } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport axios from \"axios\";\nimport {Cookies} from \"react-cookie\"\n\nconst { Title, Text, Link } = Typography;\n\n\nexport default function ProductAdjust(props){\n    const [productForm] = Form.useForm();\n    const [bmsForm] = Form.useForm();\n    const [stateText, setStateText] = useState(\"Ready\")\n    const [uploadDisable, setuploadDisable] = useState(false)\n    const [naverFile, setNaverFile] = useState(null)\n    const [kakaoFile, setKakaoFile] = useState(null)\n\n    const [bmsUploadDisable, setbmsUploadDisable] = useState(false)\n    const [bmsFile, setBmsFile] = useState(null)\n\n\n    useEffect(() => {\n        productForm.setFieldsValue({\n            form_date: getToday(),\n            form_market: '',\n            form_prod_no:'',\n            form_brand:'',\n            form_prod:'',\n            form_price:0,\n    });\n    }, []);\n\n    const layout = {\n        labelCol: { span: 4 },\n        wrapperCol: { span: 12 },\n    };\n\n    const validateMessages = {\n        required: '${label} is required!',\n        types: {\n            email: '${label} is not a valid email!',\n            number: '${label} is not a valid number!',\n        },\n        number: {\n            range: '${label} must be between ${min} and ${max}',\n        },\n    };\n\n    const onFinish = (values: any) => {\n        console.log(values);\n        const fieldValue = productForm.getFieldsValue();\n        console.log(fieldValue)\n        const formData = new FormData();\n        // formData.append(\"photo\", files.length && files[0].uploadedFile);\n        // formData.append(\"comment\", commentValue);\n        // formData.append(\"content_id\", classData.content_id);\n        const url = \"https://i-dev-piboapi.amorepacific.com/pibo/dbpa/upload/ord-data\";\n        alert(props.myCookies)\n        // const pauth2 = cookies.get('pauth')\n        // axios.defaults.headers.common['Authorization'] = `Bearer ${pauth2}`\n        // alert(pauth2);\n        return;\n\n    };\n\n    // const handleSubmit = (e) => {\n    //     e.preventDefault();\n    //     const formData = new FormData();\n    //     formData.append(\"photo\", files.length && files[0].uploadedFile);\n    //     formData.append(\"comment\", commentValue);\n    //     formData.append(\"content_id\", classData.content_id);\n    //\n    //     axios({\n    //         method: \"post\",\n    //         url: STREAMING_COMMENT_URL,\n    //         data: formData,\n    //         headers: { \"Content-Type\": \"multipart/form-data\", Authorization: localStorage.getItem(\"access_token\") }\n    //     });\n    //     setCommentValue(\"\");\n    //     setFiles([]);\n    // };\n    const columns = [\n        {\n            title: '자재코드',\n            dataIndex: 'code',\n            key: 'code',\n        },\n        {\n            title: '제품명',\n            dataIndex: 'prodName',\n            key: 'prodName',\n        },\n        {\n            title: '수량',\n            dataIndex: 'count',\n            key: 'count',\n        },\n        {\n            title: '소비자가',\n            dataIndex: 'custPrice',\n            key: 'custPrice',\n        },\n        {\n            title: '비중(%)',\n            dataIndex: 'partOf',\n            key: 'partOf',\n        },\n        {\n            title: '1EA 당 환산가',\n            dataIndex: 'unitPrice',\n            key: 'unitPrice',\n        },\n        {\n            title: '할인율(%)',\n            dataIndex: 'discountRate',\n            key: 'discountRate',\n        },\n    ];\n\n    const getToday = () => {\n        const d = new Date();\n        return  d.getFullYear() + '/' + (d.getMonth()+1) + '/' + d.getDate();\n    }\n\n    const bmsInit = () => {\n        setbmsUploadDisable(false)\n        setBmsFile(null);\n    }\n\n    const init = () => {\n        setuploadDisable(false)\n        setNaverFile(null);\n        setKakaoFile(null);\n    }\n\n    const bmsSubmitFile = () => {\n        setbmsUploadDisable(true)\n        const formData = new FormData();\n        // formData.append()\n        console.log(bmsFile);\n        formData.append(\"bmsPrdFile\", bmsFile);\n\n        console.log(formData)\n        const url = \"https://i-dev-piboapi.amorepacific.com/pibo/dbpa/upload/prd-data\";\n\n        const authStr =  `Bearer ${props.myCookies.get('pauth')}`;\n        axios.defaults.headers.common['Authorization'] =  `Bearer ${props.myCookies.get('pauth')}`;\n\n        axios({\n            method: \"post\",\n            url: url,\n            data: formData,\n        }).then(function (response) {\n            alert(response.data?.message);\n            console.log(response);\n\n            if ( response.data?.result === 'S'){\n            }else{\n            }\n            return;\n        }).catch(function (error) {\n            console.log(error);\n            alert(error)\n            if (error.response) {\n                // 요청이 이루어졌으며 서버가 2xx의 범위를 벗어나는 상태 코드로 응답했습니다.\n                console.log(error.response.data);\n                console.log(error.response.status);\n                console.log(error.response.headers);\n            }\n            else if (error.request) {\n                // 요청이 이루어 졌으나 응답을 받지 못했습니다.\n                // `error.request`는 브라우저의 XMLHttpRequest 인스턴스 또는\n                // Node.js의 http.ClientRequest 인스턴스입니다.\n                console.log(error.request);\n                console.log(error)\n            }\n            else {\n                // 오류를 발생시킨 요청을 설정하는 중에 문제가 발생했습니다.\n                console.log('Error', error.message);\n            }\n            console.log(error.config);\n        });\n    }\n\n\n    const submitFile = () => {\n        setuploadDisable(true)\n\n        const formData = new FormData();\n        // formData.append()\n        console.log(naverFile);\n        console.log(kakaoFile);\n        formData.append(\"kakaoOrdFile\", kakaoFile);\n        formData.append(\"naverOrdFile\", naverFile);\n\n        console.log(formData)\n        const url = \"https://i-dev-piboapi.amorepacific.com/pibo/dbpa/upload/ord-data\";\n\n        const authStr =  `Bearer ${props.myCookies.get('pauth')}`;\n        axios.defaults.headers.common['Authorization'] =  `Bearer ${props.myCookies.get('pauth')}`;\n\n        axios({\n            method: \"post\",\n            url: url,\n            data: formData,\n        }).then(function (response) {\n\n            alert(response.data?.message);\n            console.log(response);\n\n            if ( response.data?.result === 'S'){\n            }else{\n            }\n            return;\n        }).catch(function (error) {\n            console.log(error);\n            alert(error)\n            if (error.response) {\n                // 요청이 이루어졌으며 서버가 2xx의 범위를 벗어나는 상태 코드로 응답했습니다.\n                console.log(error.response.data);\n                console.log(error.response.status);\n                console.log(error.response.headers);\n            }\n            else if (error.request) {\n                // 요청이 이루어 졌으나 응답을 받지 못했습니다.\n                // `error.request`는 브라우저의 XMLHttpRequest 인스턴스 또는\n                // Node.js의 http.ClientRequest 인스턴스입니다.\n                console.log(error.request);\n                console.log(error)\n            }\n            else {\n                // 오류를 발생시킨 요청을 설정하는 중에 문제가 발생했습니다.\n                console.log('Error', error.message);\n            }\n            console.log(error.config);\n        });\n    }\n\n    const registerProduct = () => {\n        const fieldValue = productForm.getFieldsValue();\n    }\n    const props2 = {\n        name: 'file',\n        action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n        headers: {\n            authorization: 'authorization-text',\n        },\n        onChange(info) {\n            if (info.file.status !== 'uploading') {\n                console.log(info.file, info.fileList);\n            }\n            if (info.file.status === 'done') {\n                message.success(`${info.file.name} file uploaded successfully`);\n            } else if (info.file.status === 'error') {\n                message.error(`${info.file.name} file upload failed.`);\n            }\n        },\n    };\n\n    const handleBmsFileInput = (e) =>{\n        setBmsFile(e.target.files[0])\n    }\n\n    const handleNaverFileInput = (e) =>{\n        setNaverFile(e.target.files[0])\n    }\n    const handleKakaoFileInput = (e) =>{\n        setKakaoFile(e.target.files[0]);\n    }\n\n    return (\n    <>\n        <Card title=\"BMS 데이 업로드\" type = \"inner\"\n              actions={[\n                  <Button icon={<RedoOutlined />} onClick={() => {bmsInit()}} > 초기화 </Button>,\n                  <Button icon={<RedoOutlined />} onClick={() => {bmsSubmitFile()}} disabled={bmsUploadDisable}> 업로드 </Button>,\n              ]}\n              size=\"small\"\n                style={{ width: 684, marginTop: 16 }}\n        >\n            <Form\n                {...layout}\n                form={bmsForm}\n            >\n                <Row gutter={32}>\n                    <Col span = {6} offset={2}>\n                        <Text level={3}>BMS 정보 : </Text>\n                    </Col>\n                    <Col span = {6}>\n                        <Form.Item name=\"bmsFile\">\n                            <input type=\"file\"\n                                   name=\"bmsFile\"\n                                   accept=\"image/*,audio/*,video/mp4,video/x-m4v,application/pdf,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/vnd.ms-powerpoint,application/vnd.openxmlformats-officedocument.presentationml.presentation,.csv\"\n                                   onChange={e => handleBmsFileInput(e)}/>\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </Card>\n\n        <Card title=\"상품 가격 업로드\" type = \"inner\"\n              actions={[\n                  <Button icon={<RedoOutlined />} onClick={() => {init()}} > 초기화 </Button>,\n                  <Button icon={<RedoOutlined />} onClick={() => {submitFile()}} disabled={uploadDisable}> 업로드 </Button>,\n              ]}\n              size=\"small\"\n              style={{ width: 684, marginTop: 16 }}\n        >\n            <Form\n                {...layout}\n                form={productForm}\n                onFinish={onFinish}\n            >\n                <Row gutter={32}>\n                    <Col span = {6} offset={2}>\n                        <Text level={3}>네이버 상품정보 : </Text>\n                    </Col>\n                    <Col span = {6}>\n                        <Form.Item name=\"navFile\">\n                            <input type=\"file\"\n                                   name=\"naverFile\"\n                                   accept=\"image/*,audio/*,video/mp4,video/x-m4v,application/pdf,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/vnd.ms-powerpoint,application/vnd.openxmlformats-officedocument.presentationml.presentation,.csv\"\n                                   onChange={e => handleNaverFileInput(e)}/>\n                        </Form.Item>\n                    </Col>\n                </Row>\n                <Row gutter={32}>\n                    <Col span = {6} offset={2}>\n                        <Text level={3}>카카오 상품정보 : </Text>\n                    </Col>\n                    <Col span = {6}>\n                        <Form.Item name=\"kakaoFile\">\n                            <input type=\"file\" name=\"kakaoFile\"  onChange={e => handleKakaoFileInput(e)}/>\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </Card>\n\n\n    </>\n    );\n}\n","import React, {useEffect, useState} from 'react';\nimport {\n    Card, Tree, Typography\n} from \"antd\";\nimport {DownOutlined} from \"@ant-design/icons\";\nimport axios from \"axios\";\n\nconst { Title, Text, Link } = Typography;\nexport default function PriceInfo(props){\n    const [menuTree, setMenuTree] = useState([]);\n\n    const makeJson2MenuTree = (menuList, arr)  => {\n        if(!arr)\n            return;\n\n        if(!menuList)\n            return;\n\n        for (const menu of menuList) {\n            let obj = {}\n            obj.title = menu?.menuNm;\n            obj.key = menu?.menuId;\n            obj.isLeaf = (menu?.leafYn === \"Y\");\n            obj.children = [];\n            if(menu.subMenu){\n                makeJson2MenuTree(menu.subMenu, obj.children);\n            }\n            arr.push(obj);\n        }\n    }\n\n//     const getMenu = () => {\n//         const url = \"https://i-dev-piboapi.amorepacific.com/pibo/api/menu\";\n//\n//         if(props.myCookies.get('pauth') == undefined)\n//             return;\n//\n//         axios.defaults.headers.common['Authorization'] =  `Bearer ${props.myCookies.get('pauth')}`;\n//         axios({\n//             method: 'get',\n//             url: url,\n//             config: { withCredentials: true },\n//\n//         }).then(function (response) {\n//             let tree = [];\n//             // alert(JSON.stringify(response.data?.menuList));\n//             makeJson2MenuTree(response.data?.menuList, tree);\n// //            alert(JSON.stringify(tree));\n//             setMenuTree(tree)\n//         }).catch(function (error) {\n//             // alert(error?.response?.data);\n//             console.log(error);\n//             if (error.response) {\n//                 // 요청이 이루어졌으며 서버가 2xx의 범위를 벗어나는 상태 코드로 응답했습니다.\n//                 console.log(error.response.data);\n//                 console.log(error.response.status);\n//                 console.log(error.response.headers);\n//             }\n//             else if (error.request) {\n//                 // 요청이 이루어 졌으나 응답을 받지 못했습니다.\n//                 // `error.request`는 브라우저의 XMLHttpRequest 인스턴스 또는\n//                 // Node.js의 http.ClientRequest 인스턴스입니다.\n//                 console.log(error.request);\n//                 console.log(error)\n//             }\n//             else {\n//                 // 오류를 발생시킨 요청을 설정하는 중에 문제가 발생했습니다.\n//                 console.log('Error', error.message);\n//             }\n//             console.log(error.config);\n//         });\n//\n//     }\n\n    useEffect(() => {\n        // getMenu();\n        // setMenuTree([\n        //     {\"title\":\"PIMS\",\"key\":\"PIMS\",\"isLeaf\":true,\"children\":[]},\n        //     {\"title\":\"BCM\",\"key\":\"BCM\",\"isLeaf\":true,\"children\":[]},\n        //     {\"title\":\"가격조정\",\"key\":\"DBPA\",\"isLeaf\":true,\"children\":[]},\n        //     {\"title\":\"관리자 관리\",\"key\":\"ADNIN\",\"isLeaf\":true,\"children\":[]}\n        // ]);\n    }, []);\n\n    const onRightClick = ({event, node}) => {\n        alert(JSON.stringify(node));\n    }\n\n    const onSelect = (selectedKeys: React.Key[], info: any) => {\n        console.log('selected', selectedKeys, info);\n        alert(JSON.stringify(React.Key));\n    };\n    const onCheck = (checkedKeys: React.Key[], info: any) => {\n        console.log('onCheck', checkedKeys, info);\n    };\n\n    return (\n    <>\n        <Card title=\"메뉴 관리\" type = \"inner\"\n              // actions={[\n              //     <div/>, <div/>, <div/>,\n              //     <Button icon = {<CheckOutlined />} onClick={() => {}}> 엑셀 다운로드 </Button>,\n              //     <div/>, <div/>, <div/>,\n              // ]}\n        >\n            <Tree\n                defaultExpandedKeys={['0-0-0', '0-0-1']}\n                defaultSelectedKeys={['0-0-0', '0-0-1']}\n                defaultCheckedKeys={['0-0-0', '0-0-1']}\n                onRightClick={onRightClick}\n                onSelect={onSelect}\n                treeData={menuTree}\n            />\n\n        </Card>\n\n\n    </>\n    );\n}\n","import React from 'react';\nimport ProductInfo from \"../Contents/ProductInfo\";\nimport BatchUpdate from \"../Contents/BatchUpdate\";\nimport MallInfo from \"../Contents/MallInfo\";\nimport InterfaceResult from \"../Contents/InterfaceResult\";\nimport AttributeInfo from \"../Contents/AttributeInfo\";\nimport NoticeInfo from \"../Contents/NoticeInfo\";\nimport SynonymDic from \"../Contents/SynonymDic\";\nimport PriceInfo from \"../Contents/PriceInfo\";\nimport PriceAdjust from \"../Contents/PriceAdjust\";\n\nimport MenuTree from \"../Contents/MenuTree\";\n\nexport default function BOContents(props){\n    const PRICE_INFO = \"DBPA_RST\";\n    const PRICE_ADJUST = \"DBPA_CALC\";\n    const Keys = [\n        { contentsKey : PRICE_INFO, func: (<PriceInfo  myCookies = {props.myCookies}/>)},\n        { contentsKey : PRICE_ADJUST, func: (<PriceAdjust myCookies = {props.myCookies}/>)},\n        { contentsKey : \"111\", func: (<ProductInfo/>)},\n        { contentsKey : \"112\",  func: (<BatchUpdate/>)},\n        { contentsKey : \"113\",  func: (<MallInfo/>)},\n        { contentsKey : \"114\",  func: (<InterfaceResult/>)},\n        { contentsKey : \"121\",  func: (<AttributeInfo/>)},\n        { contentsKey : \"122\",  func: (<NoticeInfo/>)},\n        { contentsKey : \"211\",  func: (<SynonymDic/>)},\n        { contentsKey : \"43\",  func: (<MenuTree   myCookies = {props.myCookies}/>)},\n\n    ];\n    const writeContents = () =>{\n        for (const content of Keys) {\n            if (content.contentsKey === props.contentsKey){\n                return content.func;\n            }\n        }\n    }\n\n    return (\n            <>\n                {writeContents()}\n            </>\n        );\n}\n","import React, {useEffect, useState} from 'react';\nimport {Col, Layout, Menu, Space,Row} from 'antd';\nimport '../index-342fc69c.css';\nimport {\n    GiftOutlined,\n    MenuOutlined, ReadOutlined, ReconciliationOutlined, SearchOutlined,\n    SyncOutlined, UserOutlined,\n} from '@ant-design/icons';\nimport Title from \"antd/es/typography/Title\";\nimport BOContents from \"./BOContents\";\nimport axios from \"axios\";\nconst { Header, Sider, Content } = Layout;\n\nconst { SubMenu } = Menu;\n\n\nexport default function UBOMain(props){\n    const [collapsed, setCollapsed] = useState(false);\n    const [contents, setContents] = useState(\"\");\n    // const [menuTree, setMenuTree] =  useState([]);\n\n    const menuClick = (key, name) => {\n        setContents(key?.key)\n    }\n\n    useEffect(() => {\n    }, []);\n\n\n    const sampleMenu = [\n            {\"title\":\"PIMS\",\"key\":\"PIMS\",\"isLeaf\":false,\n                \"children\":[\n                    {\"title\":\"PIMS01\",\"key\":\"PIMS01\",\"isLeaf\":true, \"children\":[]},\n                    {\"title\":\"PIMS02\",\"key\":\"PIMS02\",\"isLeaf\":true, \"children\":[]},\n                    {\"title\":\"PIMS03\",\"key\":\"PIMS03\",\"isLeaf\":true, \"children\":[]},\n                ]},\n            {\"title\":\"BCM\",\"key\":\"BCM\",\"isLeaf\":true,\"children\":[]},\n            {\"title\":\"가격조정\",\"key\":\"DBPA\",\"isLeaf\":true,\"children\":[]},\n            {\"title\":\"관리자 관리\",\"key\":\"ADNIN\",\"isLeaf\":true,\"children\":[]}\n        ];\n\n\n    const createMenu = (menu) => {\n        if(!menu)\n            return;\n        if(menu.isLeaf) {\n            return <Menu.Item key={menu.key} onClick={(key) => menuClick(key)}> {menu.title} </Menu.Item>\n        } else {\n            return <SubMenu key={menu.key} icon={<ReconciliationOutlined/>} title={menu.title}>\n                { menu.children.map((sub) => {\n                    return createMenu(sub);\n                })}\n            </SubMenu>\n        }\n    }\n\n    const menuMap = props.menuTree.map((menu) => createMenu(menu));\n\n    return (\n        <>\n        <Layout>\n            <Header\n                style = {{\n                    backgroundColor: \"white\",\n                    textAlign:\"left\",\n                    verticalAlign:\"center\",\n                }}\n\n            >\n                    {/*<Col span={1}>*/}\n                    {/*    <MenuOutlined style={{ fontSize: '24px', color: '#08c' }}*/}\n                    {/*                  onClick={() => { setCollapsed(!collapsed)}} />*/}\n                    {/*</Col>*/}\n                    <Col  style={{marginTop:\"12px\"}}>\n                    {/*        <MenuOutlined style={{ fontSize: '24px', color: '#08c' }}*/}\n                    {/*                      onClick={() => { setCollapsed(!collapsed)}} />*/}\n                       <Title level={3} >플랫폼 통합 BackOffice</Title>\n                    </Col>\n            </Header>\n        <Layout>\n            <Sider\n                style={{\n                    overflow: 'auto',\n                    height: '200vh',\n                    left: 0,\n                }}\n                trigger={null} collapsible collapsed={collapsed}\n            >\n                <Menu mode=\"inline\" theme=\"dark\">\n                    {menuMap}\n                </Menu>\n            </Sider>\n            <Layout className=\"site-layout\">\n                <Content\n                    style={{\n                        margin: '24px 16px 0',\n                        overflow: 'initial',\n                        height: '100vh',\n                        minHeight: 1024,\n                    }}>\n\n                    <BOContents contentsKey = {contents} myCookies = {props.myCookies} />\n                </Content>\n            </Layout>\n        </Layout>\n        </Layout>\n        </>\n    );\n}\n","import React, {useEffect, useState} from 'react';\nimport {Form, Input,  Modal} from 'antd';\nimport '../index-342fc69c.css';\nimport axios from \"axios\";\n\n\nimport Checkbox from \"antd/es/checkbox/Checkbox\";\n\nexport default function LoginMain(props){\n    const [isVisible, setIsVisible] = useState(true)\n    const [loginForm] = Form.useForm();\n\n    const cookies = props.myCookies;\n\n    useEffect(() => {\n\n    }, []);\n\n    const handleCancel = () => {\n        setIsVisible(false);\n    };\n\n    const makeJson2MenuTree = (menuList, arr)  => {\n        if(!arr)\n            return;\n\n        if(!menuList)\n            return;\n\n        for (const menu of menuList) {\n            let obj = {}\n            obj.title = menu?.menuNm;\n            obj.key = menu?.menuId;\n            obj.isLeaf = (menu?.leafYn === \"Y\");\n            obj.children = [];\n            if(menu.subMenu){\n                makeJson2MenuTree(menu.subMenu, obj.children);\n            }\n            // alert(JSON.stringify(obj))\n            arr.push(obj);\n        }\n        return arr;\n    }\n\n    const menuLoad = () => {\n        const url = \"https://i-dev-piboapi.amorepacific.com/pibo/api/menu\";\n        const pauth2 = cookies.get('pauth')\n        axios.defaults.headers.common['Authorization'] = `Bearer ${pauth2}`\n\n        axios({\n            method: 'get',\n            url: url,\n            config: { withCredentials: true },\n\n        }).then(function (response) {\n            // alert(JSON.stringify(response.data));\n            let arr = [];\n            props.setMenuTree(makeJson2MenuTree(response.data?.menuList, arr));\n            console.log(JSON.stringify(props.menuTree));\n        }).catch(function (error) {\n            // alert(error?.response?.data);\n            console.log(error);\n            if (error.response) {\n                // 요청이 이루어졌으며 서버가 2xx의 범위를 벗어나는 상태 코드로 응답했습니다.\n                console.log(error.response.data);\n                console.log(error.response.status);\n                console.log(error.response.headers);\n            }\n            else if (error.request) {\n                // 요청이 이루어 졌으나 응답을 받지 못했습니다.\n                // `error.request`는 브라우저의 XMLHttpRequest 인스턴스 또는\n                // Node.js의 http.ClientRequest 인스턴스입니다.\n                console.log(error.request);\n                console.log(error)\n            }\n            else {\n                // 오류를 발생시킨 요청을 설정하는 중에 문제가 발생했습니다.\n                console.log('Error', error.message);\n            }\n            console.log(error.config);\n        });\n\n    }\n\n    const loginOk = () => {\n        const fieldValue = loginForm.getFieldsValue();\n        const paramId = fieldValue['id'];\n        const paramPassword = fieldValue['password']\n\n        const url = \"https://i-dev-piboapi.amorepacific.com/pibo/login\";\n\n        axios({\n            method: 'post',\n            url: url,\n            data: {\n                id: paramId,\n                password: paramPassword,\n            },\n            config: { withCredentials: true },\n\n        }).then(function (response) {\n\n            alert(response.data?.message);\n            console.log(response);\n\n            if ( response.data?.result === 'S'){\n                setIsVisible(false);\n                cookies.set(\"pauth\", response.headers?.pauth);\n                cookies.set(\"pid\", paramId)\n                menuLoad();\n            }else{\n                setIsVisible(true);\n            }\n            return;\n        }).catch(function (error) {\n            alert(error.response.data?.message);\n\n            console.log(error);\n            if (error.response) {\n                // 요청이 이루어졌으며 서버가 2xx의 범위를 벗어나는 상태 코드로 응답했습니다.\n                console.log(error.response.data);\n                console.log(error.response.status);\n                console.log(error.response.headers);\n            }\n            else if (error.request) {\n                // 요청이 이루어 졌으나 응답을 받지 못했습니다.\n                // `error.request`는 브라우저의 XMLHttpRequest 인스턴스 또는\n                // Node.js의 http.ClientRequest 인스턴스입니다.\n                console.log(error.request);\n                console.log(error)\n            }\n            else {\n                // 오류를 발생시킨 요청을 설정하는 중에 문제가 발생했습니다.\n                console.log('Error', error.message);\n            }\n            console.log(error.config);\n        });\n    }\n    const onFinishFailed = () => {\n\n    }\n\n    const onFinish = (values: any) => {\n    };\n    return (\n        <div>\n            <Modal title=\"플랫폼 통합 BO 로그인\" visible={isVisible} onOk={loginOk} onCancel={handleCancel}>\n\n            <Form\n                name=\"basic\"\n                form={loginForm}\n                labelCol={{ span: 6 }}\n                wrapperCol={{ span: 18 }}\n                style = {{verticalAlign: \"middle\"}}\n                initialValues={{ remember: true }}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n            >\n                <Form.Item\n                    label=\"id\"\n                    name=\"id\"\n                    rules={[{ required: true, message: 'AP-ON id 를 넣으세요.' }]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Password\"\n                    name=\"password\"\n                    rules={[{ required: true, message: '암호를 넣으세요.' }]}\n\n                >\n                    <Input.Password />\n                </Form.Item>\n\n                <Form.Item name=\"remember\" valuePropName=\"checked\" wrapperCol={{ offset: 8, span: 16 }}>\n                    <Checkbox>Remember me</Checkbox>\n                </Form.Item>\n\n            </Form>\n            </Modal>\n        </div>\n    );\n}\n","import React, {useState} from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport UBOMain from \"./component/UBOMain\";\nimport LoginMain from \"./component/LoginMain\";\nimport {Cookies} from \"react-cookie\"\nimport 'antd/dist/antd.css';\n\n\nfunction App() {\n  const cookies = new Cookies();\n  const [menuTree, setMenuTree] =  useState([]);\n\n    return (\n    <div className=\"App\">\n        <LoginMain\n            myCookies = {cookies}\n            menuTree = {menuTree}\n            setMenuTree = {setMenuTree}\n        />\n        <UBOMain\n            myCookies = {cookies}\n            menuTree = {menuTree}\n            setMenuTree = {setMenuTree}\n        />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}