{"version":3,"sources":["component/Text/PropertyTitle.js","component/Input/SearchNInput.js","component/Input/FromTo.js","component/Input/BODropdownHalf.js","component/Input/BOInput.js","Contents/ProductInfo.js","component/Input/BODropdownLine.js","component/Input/BOEmpty.js","component/Text/PropertyData.js","component/Input/BOViewHalfLine.js","Contents/BatchUpdate.js","component/Input/BODropdownNInputHalf.js","Contents/MallInfo.js","Contents/InterfaceResult.js","component/Input/BORadio.js","Contents/AttributeInfo.js","Contents/NoticeInfo.js","component/Input/BOInputFull.js","Contents/SynonymDic.js","Contents/PriceInfo.js","Contents/PriceAdjust.js","component/BOContents.js","component/UBOMain.js","component/LoginMain.js","App.js","reportWebVitals.js","index.js"],"names":["PropertyTitle","props","span","style","textAlign","Title","level","margin","fontSize","text","SearchNInput","name","padding","Item","size","disabled","icon","SearchOutlined","block","FromTo","dateFormat","menu","onClick","e","message","info","console","log","UserOutlined","format","Button","overlay","BODropdownHalf","handleMenuClick","border","align","className","DownOutlined","BOInput","defaultValue","value","ProductInfo","title","type","actions","RedoOutlined","CheckOutlined","gutter","display","marginTop","marginBottom","columns","dataIndex","key","BODropdownLine","BOEmpty","PropertyData","BOViewHalfLine","BatchUpdate","Column","Table","ColumnGroup","column","LockOutlined","scroll","x","BODropdownNInputHalf","ColFormStyle","MallInfo","InterfaceResult","BORadio","Group","onChange","AttributeInfo","contents","NoticeInfo","BOInputFull","SynonymDic","PlusOutlined","MinusOutlined","SaveOutlined","ReloadOutlined","Form","useForm","productForm","useEffect","setFieldsValue","form_date","getToday","form_market","form_prod_no","form_brand","form_prod","form_price","layout","labelCol","wrapperCol","d","Date","getFullYear","getMonth","getDate","alert","form","onFinish","values","fieldValue","getFieldsValue","label","offset","htmlType","data","date","market","skuId","viId","price","adjustedPrice","ProductAdjust","extra","href","width","UploadOutlined","BOContents","Keys","contentsKey","func","content","writeContents","Header","Layout","Sider","Content","SubMenu","Menu","UBOMain","useState","collapsed","setCollapsed","setContents","menuClick","backgroundColor","verticalAlign","MenuOutlined","color","marginLeft","overflow","height","left","trigger","collapsible","mode","theme","SyncOutlined","GiftOutlined","ReadOutlined","ReconciliationOutlined","minHeight","LoginMain","isVisible","setIsVisible","loginForm","cookies","Cookies","visible","onOk","paramId","paramPassword","axios","method","url","id","password","config","withCredentials","then","response","set","pauth","defaults","headers","common","catch","error","status","request","result","onCancel","initialValues","remember","onFinishFailed","rules","required","Password","valuePropName","Checkbox","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6ZAUe,SAASA,EAAcC,GAClC,OACI,cAAC,IAAD,CAAKC,KAAM,EAAKC,MAAO,CAACC,UAAW,UAAnC,SACI,eAAC,IAAWC,MAAZ,CAAkBC,MAAO,EAAGH,MAAO,CAACI,OAAO,GAAIC,SAAS,UAAxD,UAAqEP,EAAMQ,KAA3E,SCAG,SAASC,EAAaT,GACjC,OACI,qCACI,cAACD,EAAD,CAAeS,KAAQR,EAAMU,OAC7B,cAAC,IAAD,CAAKT,KAAM,EAAX,SACI,eAAC,IAAD,CAAKC,MAAS,CAAEI,OAAQ,EAAGK,QAAS,GAApC,UACI,cAAC,IAAD,CAAKV,KAAM,GAAX,SACI,cAAC,IAAKW,KAAN,CAAWV,MAAS,CAAEI,OAAQ,EAAGK,QAAS,GAA1C,SACI,cAAC,IAAD,CAAOE,KAAO,QAAQC,UAAQ,QAItC,cAAC,IAAD,CAAKb,KAAM,GAAX,SACI,cAAC,IAAKW,KAAN,CAAWV,MAAS,CAAEI,OAAQ,EAAGK,QAAS,GAA1C,SACI,eAAC,IAAD,CAAQE,KAAO,QAAQE,KAAQ,cAACC,EAAA,EAAD,IAAmBC,OAAK,EAAvD,cACGjB,EAAMU,KADT,+B,+BCdb,SAASQ,EAAOlB,GAE3B,IAAMmB,EAAa,WAWnB,IAAMC,EACF,eAAC,IAAD,CAAMC,QAVV,SAAyBC,GACrBC,IAAQC,KAAK,uBACbC,QAAQC,IAAI,QAASJ,IAQrB,UACI,cAAC,IAAKV,KAAN,CAAmBG,KAAM,cAACY,EAAA,EAAD,IAAzB,0BAAe,KAGf,cAAC,IAAKf,KAAN,CAAmBG,KAAM,cAACY,EAAA,EAAD,IAAzB,0BAAe,KAGf,cAAC,IAAKf,KAAN,CAAmBG,KAAM,cAACY,EAAA,EAAD,IAAzB,0BAAe,KAPnB,OAYJ,OACI,qCACI,cAAC,EAAD,CAAcnB,KAAQR,EAAMU,OAC5B,cAAC,IAAD,CAAKT,KAAM,EAAX,SACI,eAAC,IAAD,CAAKC,MAAS,CAAEI,OAAQ,EAAGK,QAAS,GAApC,UACI,cAAC,IAAD,CAAKV,KAAM,EAAX,SACI,cAAC,IAAKW,KAAN,CAAWV,MAAS,CAAEI,OAAQ,EAAGK,QAAS,GAA1C,SACI,cAAC,IAAD,CAAYE,KAAM,QAAQe,OAAQT,QAG1C,cAAC,IAAD,CAAKlB,KAAM,EAAX,SACI,cAAC,IAAKW,KAAN,CAAWV,MAAS,CAAEI,OAAQ,EAAGK,QAAS,GAA1C,SACI,cAAC,IAAD,CAAYE,KAAM,QAAQe,OAAQT,QAG1C,cAAC,IAAD,CAAKlB,KAAM,EAAX,SACI,cAAC,IAAKW,KAAN,CAAWV,MAAS,CAAEI,OAAQ,EAAGK,QAAS,GAA1C,SAEI,cAAC,IAASkB,OAAV,CAAkBhB,KAAM,QAAQQ,QAnCxD,SAA2BC,GACvBC,IAAQC,KAAK,yBACbC,QAAQC,IAAI,oBAAqBJ,IAiC+CQ,QAASV,EAAMH,OAAK,EAAhF,6BAKR,cAAC,IAAD,CAAKhB,KAAM,EAAX,SACI,cAAC,IAAKW,KAAN,CAAWV,MAAS,CAAEI,OAAQ,EAAGK,QAAS,GAA1C,SACI,cAAC,IAAD,CAAQE,KAAM,QAAQI,OAAK,EAA3B,4C,aCvDb,SAASc,EAAe/B,GAEnC,SAASgC,EAAgBV,GACrBC,IAAQC,KAAK,uBACbC,QAAQC,IAAI,QAASJ,GAUzB,IAAMF,EACF,eAAC,IAAD,CAAMC,QAASW,EAAf,UACI,cAAC,IAAKpB,KAAN,CAAmBG,KAAM,cAACY,EAAA,EAAD,IAAzB,0BAAe,KAGf,cAAC,IAAKf,KAAN,CAAmBG,KAAM,cAACY,EAAA,EAAD,IAAzB,0BAAe,KAGf,cAAC,IAAKf,KAAN,CAAmBG,KAAM,cAACY,EAAA,EAAD,IAAzB,0BAAe,QAKvB,OACI,qCACI,cAAC5B,EAAD,CAAeS,KAAQR,EAAMU,OAC7B,cAAC,IAAD,CAAKT,KAAM,EAAGC,MAxBD,CACjB+B,OAAO,QAuBgCC,MAAO,OAA1C,SACI,cAAC,IAAKtB,KAAN,CAAWV,MAAS,CAAEI,OAAQ,EAAGK,QAAS,GAA1C,SACI,cAAC,IAAD,CAAUmB,QAASV,EAAnB,SACI,oBAAGe,UAAU,oBAAoBd,QAAS,SAAAC,GAAC,OAAIU,EAAgBV,IAA/D,0BACiB,cAACc,EAAA,EAAD,gBChC1B,SAASC,EAAQrC,GAC5B,OACI,qCACI,cAACD,EAAD,CAAeS,KAAQR,EAAMU,OAC7B,cAAC,IAAD,CAAKT,KAAM,EAAGiC,MAAO,OAArB,SACI,cAAC,IAAKtB,KAAN,CAAWV,MAAS,CAAEI,OAAQ,EAAGK,QAAS,GAA1C,SACI,cAAC,IAAD,CAAOE,KAAK,QAAQyB,aAActC,EAAMuC,eCE7C,SAASC,EAAYxC,GAiDhC,OACA,qCACI,cAAC,IAAD,CAAMyC,MAAM,yCAAWC,KAAO,QACxBC,QAAS,CACL,wBAAQ,wBAAQ,wBAChB,cAAC,IAAD,CAAQ5B,KAAM,cAAC6B,EAAA,EAAD,IAAd,kCACA,cAAC,IAAD,CAAQ7B,KAAQ,cAAC8B,EAAA,EAAD,IAAhB,4BACA,cAAC,IAAD,CAAQ9B,KAAQ,cAAC8B,EAAA,EAAD,IAAhB,4BACA,wBAAQ,wBAAQ,yBAEpBhC,KAAK,QARX,SAUI,eAAC,IAAD,CAAKiC,OAAQ,CAAC,EAAE,GAAIjC,KAAO,QAA3B,UACI,cAACJ,EAAD,CAAcC,KAAO,qBAAMR,MAAO,CAAE6C,QAAS,UAC7C,cAAC7B,EAAD,CAAQR,KAAO,6BACf,cAACD,EAAD,CAAcC,KAAO,iBACrB,cAACQ,EAAD,CAAQR,KAAO,6BACf,cAACqB,EAAD,CAAgBrB,KAAO,6BACvB,cAAC2B,EAAD,CAAS3B,KAAO,uBAChB,cAACqB,EAAD,CAAgBrB,KAAO,6BACvB,cAAC2B,EAAD,CAAS3B,KAAO,oBAChB,cAAC2B,EAAD,CAAS3B,KAAO,4BAGxB,cAAC,IAAD,CAAKoC,OAAQ,CAAC,EAAE,IAAM5C,MAAO,CAAC8C,UAAU,GAAIC,aAAa,IAAzD,SACI,cAAC,IAAD,CAAKhD,KAAM,EAAX,SACI,cAAC,IAAD,CAASE,UAAW,OAApB,qEAGR,cAAC,IAAD,CAAO+C,QA5EK,CACZ,CACIT,MAAO,eACPU,UAAW,KACXC,IAAK,MAET,CACIX,MAAO,qBACPU,UAAW,OACXC,IAAK,QAET,CACIX,MAAO,mBACPU,UAAW,MACXC,IAAK,OAET,CACIX,MAAO,qBACPU,UAAW,QACXC,IAAK,SAET,CACIX,MAAO,eACPU,UAAW,QACXC,IAAK,SAET,CACIX,MAAO,2BACPU,UAAW,QACXC,IAAK,SAET,CACIX,MAAO,qBACPU,UAAW,WACXC,IAAK,YAET,CACIX,MAAO,qBACPU,UAAW,WACXC,IAAK,YAET,CACIX,MAAO,2BACPU,UAAW,cACXC,IAAK,gBAgCgBvC,KAAK,a,aCzFvB,SAASwC,EAAerD,GAcnC,IAAMoB,EACF,eAAC,IAAD,CAAMC,QAbV,SAAyBC,GACrBC,IAAQC,KAAK,uBACbC,QAAQC,IAAI,QAASJ,IAWrB,UACI,cAAC,IAAKV,KAAN,CAAmBG,KAAM,cAACY,EAAA,EAAD,IAAzB,0BAAe,KAGf,cAAC,IAAKf,KAAN,CAAmBG,KAAM,cAACY,EAAA,EAAD,IAAzB,0BAAe,KAGf,cAAC,IAAKf,KAAN,CAAmBG,KAAM,cAACY,EAAA,EAAD,IAAzB,0BAAe,QAKvB,OACI,qCACI,cAAC,IAAD,CAAK1B,KAAM,GAAMC,MAAO,CAACC,UAAW,UAAWU,KAAO,QAAtD,SACI,cAAC,IAAWT,MAAZ,CAAmBC,MAAO,EAA1B,SAA8BL,EAAMU,SAExC,cAAC,IAAD,CAAKT,KAAM,GAAIC,MA1BF,CACjB+B,OAAO,QAyBiCC,MAAO,OAA3C,SACI,cAAC,IAAKtB,KAAN,CAAWV,MAAS,CAAEI,OAAQ,EAAGK,QAAS,GAA1C,SACI,cAAC,IAASkB,OAAV,CAAiBR,QAxBjC,SAA2BC,GACvBC,IAAQC,KAAK,yBACbC,QAAQC,IAAI,oBAAqBJ,IAsBwBQ,QAASV,EAAMP,KAAO,QAAnE,0BChCL,SAASyC,EAAQtD,GAC5B,OACI,qCACI,cAAC,IAAD,CAAKC,KAAM,IACX,cAAC,IAAD,CAAKA,KAAM,OCJR,SAASsD,EAAavD,GACjC,OACI,mCACI,cAAC,IAAD,CAAKC,KAAMD,EAAMC,KAAME,UAAW,OAASD,MAAO,CAACC,UAAW,QAA9D,SACI,eAAC,IAAWC,MAAZ,CAAkBC,MAAO,EAAGH,MAAO,CAACI,OAAO,IAA3C,UAAiDN,EAAMQ,KAAvD,WCJD,SAASgD,EAAexD,GAEnC,OACI,qCACI,cAACD,EAAD,CAAeS,KAAQR,EAAMU,OAC7B,cAAC6C,EAAD,CAAc/C,KAAO,IAAIP,KAAO,SCO7B,SAASwD,EAAYzD,GAChC,IAAQ0D,EAAwBC,IAAxBD,OAAQE,EAAgBD,IAAhBC,YAyChB,OACA,mCACI,eAAC,IAAD,CAAMnB,MAAM,sDAAc5B,KAAK,QAA/B,UACI,cAAC,IAAD,CAAM4B,MAAQ,+CAAY5B,KAAK,QAA/B,SACI,cAAC,IAAD,CAAOqC,QA3CH,CACZ,CACIT,MAAO,eACPU,UAAW,KACXC,IAAK,KACLS,OAAQ,CACJ,CACIpB,MAAO,eACPU,UAAW,KACXC,IAAK,MAET,CACIX,MAAO,eACPU,UAAW,KACXC,IAAK,QAIjB,CACIX,MAAO,qBACPU,UAAW,UACXC,IAAK,WAET,CACIX,MAAO,2BACPU,UAAW,SACXC,IAAK,UAET,CACIX,MAAO,2BACPU,UAAW,YACXC,IAAK,aAET,CACIX,MAAO,2BACPU,UAAW,UACXC,IAAK,YAOwBvC,KAAK,YAElC,eAAC,IAAD,CAAMX,MAAS,CAAES,QAAQ,QAASE,KAAK,QAAvC,UACI,cAACkB,EAAD,CAAgBrB,KAAM,0CACtB,cAAC4C,EAAD,IACA,cAACvB,EAAD,CAAgBrB,KAAM,8BACtB,cAAC,IAAD,CAAKT,KAAM,EAAX,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAKA,KAAM,GAAX,SACI,cAAC,IAAD,CAAQc,KAAQ,cAAC+C,EAAA,EAAD,IAAkB7C,OAAK,EAAvC,4BAEJ,cAAC,IAAD,CAAKhB,KAAM,GAAX,SACI,cAAC,IAAD,CAAQc,KAAQ,cAAC+C,EAAA,EAAD,IAAkB7C,OAAK,EAAvC,0DAIZ,cAAC,IAAD,CAAKhB,KAAM,IACX,cAACuD,EAAD,CAAgB9C,KAAO,wBACvB,cAAC8C,EAAD,CAAgB9C,KAAO,gCAG3B,eAAC,IAAD,CAAQqD,OAAQ,CAAEC,EAAG,MAAQnD,KAAO,QAApC,UACI,eAAC+C,EAAD,CAAanB,MAAM,2BAAnB,UACI,cAACiB,EAAD,CAAQjB,MAAM,uCAASU,UAAU,aAAgB,aACjD,cAACO,EAAD,CAAQjB,MAAM,2BAAOU,UAAU,YAAe,eAElD,cAACO,EAAD,CAAQjB,MAAM,mBAASU,UAAU,OAAU,OAC3C,eAACS,EAAD,CAAanB,MAAM,yCAAnB,UACI,cAACiB,EAAD,CAAQjB,MAAM,eAAKU,UAAU,aAAgB,aAC7C,cAACO,EAAD,CAAQjB,MAAM,6CAAUU,UAAU,YAAe,YACjD,cAACO,EAAD,CAAQjB,MAAM,2BAAOU,UAAU,aAAgB,aAC/C,cAACO,EAAD,CAAQjB,MAAM,2BAAOU,UAAU,YAAe,YAC9C,cAACO,EAAD,CAAQjB,MAAM,2CAAaU,UAAU,aAAgB,aACrD,cAACO,EAAD,CAAQjB,MAAM,qBAAMU,UAAU,YAAe,YAC7C,cAACO,EAAD,CAAQjB,MAAM,qBAAMU,UAAU,aAAgB,aAC9C,cAACO,EAAD,CAAQjB,MAAM,oCAAWU,UAAU,YAAe,YAClD,cAACO,EAAD,CAAQjB,MAAM,oCAAWU,UAAU,aAAgB,aACnD,cAACO,EAAD,CAAQjB,MAAM,wCAAUU,UAAU,YAAe,YACjD,cAACO,EAAD,CAAQjB,MAAM,kCAASU,UAAU,aAAgB,aACjD,cAACO,EAAD,CAAQjB,MAAM,2BAAOU,UAAU,YAAe,uBClGnD,SAASc,EAAqBjE,GAMzC,IAAMkE,EAAe,CACjBjC,OAAO,QAOX,IAAMb,EACF,eAAC,IAAD,CAAMC,QAbV,SAAyBC,GACrBC,IAAQC,KAAK,uBACbC,QAAQC,IAAI,QAASJ,IAWrB,UACI,cAAC,IAAKV,KAAN,CAAmBG,KAAM,cAACY,EAAA,EAAD,IAAzB,0BAAe,KAGf,cAAC,IAAKf,KAAN,CAAmBG,KAAM,cAACY,EAAA,EAAD,IAAzB,0BAAe,KAGf,cAAC,IAAKf,KAAN,CAAmBG,KAAM,cAACY,EAAA,EAAD,IAAzB,0BAAe,QAKvB,OACI,qCACI,cAAC5B,EAAD,CAAeS,KAAQR,EAAMU,OAC7B,cAAC,IAAD,CAAKT,KAAM,EAAGC,MAAOgE,EAAchC,MAAO,OAA1C,SACI,cAAC,IAAKtB,KAAN,CAAWV,MAAS,CAAEI,OAAQ,EAAGK,QAAS,GAA1C,SACI,cAAC,IAASkB,OAAV,CAAiBR,QAtBjC,SAA2BC,GACvBC,IAAQC,KAAK,yBACbC,QAAQC,IAAI,oBAAqBJ,IAoBwBQ,QAASV,EAAMP,KAAK,QAAjE,6BAKR,cAAC,IAAD,CAAKZ,KAAM,EAAGC,MAAOgE,EAAchC,MAAO,OAA1C,SACI,cAAC,IAAKtB,KAAN,CAAWV,MAAS,CAAEI,OAAQ,EAAGK,QAAS,GAA1C,SACI,cAAC,IAAD,CAAOE,KAAK,iBCzBjB,SAASsD,EAASnE,GACG2D,IAAxBD,OAAwBC,IAAhBC,YA4ChB,OACA,qCACI,cAAC,IAAD,CAAMnB,MAAM,+CACNE,QAAS,CACL,wBAAQ,wBAAQ,wBAChB,cAAC,IAAD,CAAQ5B,KAAM,cAAC6B,EAAA,EAAD,IAAd,kCACA,cAAC,IAAD,CAAQ7B,KAAQ,cAAC8B,EAAA,EAAD,IAAhB,4BACA,wBAAQ,wBAAQ,yBAEpBhC,KAAK,QAPX,SASI,eAAC,IAAD,CAAMX,MAAS,CAAES,QAAQ,QAAzB,UACI,cAACoB,EAAD,CAAgBrB,KAAM,gBACtB,cAAC2B,EAAD,CAAS3B,KAAO,uBAChB,cAACuD,EAAD,CAAsBvD,KAAO,kCAGrC,cAAC,IAAD,CAAOwC,QA3DK,CACZ,CACIT,MAAO,eACPU,UAAW,KACXC,IAAK,MAET,CACIX,MAAO,qBACPU,UAAW,WACXC,IAAK,YAET,CACIX,MAAO,kBACPU,UAAW,UACXC,IAAK,WAET,CACIX,MAAO,qBACPU,UAAW,QACXC,IAAK,SAET,CACIX,MAAO,eACPU,UAAW,WACXC,IAAK,YAET,CACIX,MAAO,iCACPU,UAAW,eACXC,IAAK,gBAET,CACIX,MAAO,2BACPU,UAAW,eACXC,IAAK,gBAET,CACIX,MAAO,2BACPU,UAAW,UACXC,IAAK,YAoBgBvC,KAAO,aCzEzB,SAASuD,EAAgBpE,GACJ2D,IAAxBD,OAAwBC,IAAhBC,YA4ChB,OACA,qCACI,cAAC,IAAD,CAAMnB,MAAM,+BACNE,QAAS,CACL,wBAAQ,wBAAQ,wBAChB,cAAC,IAAD,CAAQ5B,KAAM,cAAC6B,EAAA,EAAD,IAAd,kCACA,cAAC,IAAD,CAAQ7B,KAAQ,cAAC8B,EAAA,EAAD,IAAhB,4BACA,wBAAQ,wBAAQ,yBAEpBhC,KAAK,QAPX,SAUA,eAAC,IAAD,CAAMX,MAAS,CAAES,QAAQ,QAAzB,UACQ,cAAC0B,EAAD,CAAS3B,KAAO,WAChB,cAAC2B,EAAD,CAAS3B,KAAO,eAChB,cAAC2B,EAAD,CAAS3B,KAAO,oCAChB,cAAC2B,EAAD,CAAS3B,KAAO,oCAChB,cAACqB,EAAD,CAAgBrB,KAAK,qCACrB,cAACqB,EAAD,CAAgBrB,KAAK,0BAG7B,cAAC,IAAD,CAAKoC,OAAQ,CAAC,EAAE,IAAM5C,MAAO,CAAC8C,UAAU,GAAIC,aAAa,IAAzD,SACI,cAAC,IAAD,CAAKhD,KAAM,EAAX,SACI,cAAC,IAAD,CAASE,UAAW,OAApB,wDAGR,cAAC,IAAD,CAAO+C,QApEK,CACZ,CACIT,MAAO,MACPU,UAAW,KACXC,IAAK,MAET,CACIX,MAAO,SACPU,UAAW,WACXC,IAAK,YAET,CACIX,MAAO,eACPU,UAAW,UACXC,IAAK,WAET,CACIX,MAAO,kCACPU,UAAW,QACXC,IAAK,SAET,CACIX,MAAO,kCACPU,UAAW,WACXC,IAAK,YAET,CACIX,MAAO,mCACPU,UAAW,eACXC,IAAK,gBAET,CACIX,MAAO,mBACPU,UAAW,eACXC,IAAK,gBAET,CACIX,MAAO,2BACPU,UAAW,UACXC,IAAK,YA6BgBvC,KAAK,a,aCvEvB,SAASwD,EAAQrE,GAK5B,OACI,qCACI,cAACD,EAAD,CAAeS,KAAQR,EAAMU,OAC7B,cAAC,IAAD,CAAKT,KAAM,EAAGiC,MAAO,OAArB,SACI,cAAC,IAAKtB,KAAN,CAAWV,MAAS,CAAEI,OAAQ,EAAGK,QAAS,GAA1C,SACI,eAAC,IAAM2D,MAAP,CAAaC,SATZ,aASgCjC,aAAc,EAA/C,UACI,cAAC,IAAD,CAAOC,MAAO,EAAd,0BACA,cAAC,IAAD,CAAOA,MAAO,EAAd,0BACA,cAAC,IAAD,CAAOA,MAAO,EAAd,iDCdT,SAASiC,EAAcxE,GACF2D,IAAxBD,OAAwBC,IAAhBC,YAiDhB,OACA,qCACI,cAAC,IAAD,CAAMnB,MAAM,+CACNE,QAAS,CACL,wBAAQ,wBAAQ,wBAChB,cAAC,IAAD,CAAQ5B,KAAM,cAAC6B,EAAA,EAAD,IAAd,kCACA,cAAC,IAAD,CAAQ7B,KAAQ,cAAC8B,EAAA,EAAD,IAAhB,4BACA,wBAAQ,wBAAQ,yBAEpBhC,KAAK,QAPX,SAUA,eAAC,IAAD,CAAMX,MAAS,CAAES,QAAQ,QAAzB,UACQ,cAAC0B,EAAD,CAAS3B,KAAO,mCAChB,cAAC2B,EAAD,CAAS3B,KAAO,mCAChB,cAAC2B,EAAD,CAAS3B,KAAO,+BAChB,cAAC2B,EAAD,CAAS3B,KAAO,+BAChB,cAAC2D,EAAD,CAAS3D,KAAO,oDAAY+D,SAAU,CAAC,eAAM,eAAM,+BACnD,cAACJ,EAAD,CAAS3D,KAAO,oDAAY+D,SAAU,CAAC,eAAM,eAAM,+BACnD,cAACJ,EAAD,CAAS3D,KAAO,oDAAY+D,SAAU,CAAC,eAAM,eAAM,6BAG3D,cAAC,IAAD,CAAK3B,OAAQ,CAAC,EAAE,IAAM5C,MAAO,CAAC8C,UAAU,GAAIC,aAAa,IAAzD,SACI,cAAC,IAAD,CAAKhD,KAAM,EAAX,SACI,cAAC,IAAD,CAASE,UAAW,OAApB,4CAGR,cAAC,IAAD,CAAO+C,QA1EK,CACZ,CACIT,MAAO,eACPU,UAAW,KACXC,IAAK,MAET,CACIX,MAAO,6BACPU,UAAW,WACXC,IAAK,YAET,CACIX,MAAO,iCACPU,UAAW,UACXC,IAAK,WAET,CACIX,MAAO,2BACPU,UAAW,QACXC,IAAK,SAET,CACIX,MAAO,2BACPU,UAAW,WACXC,IAAK,YAET,CACIX,MAAO,6BACPU,UAAW,eACXC,IAAK,gBAET,CACIX,MAAO,2BACPU,UAAW,eACXC,IAAK,gBAET,CACIX,MAAO,2BACPU,UAAW,UACXC,IAAK,WAET,CACIX,MAAO,2BACPU,UAAW,UACXC,IAAK,YA8BgBvC,KAAO,aC7EzB,SAAS6D,EAAW1E,GACC2D,IAAxBD,OAAwBC,IAAhBC,YAiDhB,OACA,qCACI,cAAC,IAAD,CAAMnB,MAAM,+CACNE,QAAS,CACL,wBAAQ,wBAAQ,wBAChB,cAAC,IAAD,CAAQ5B,KAAM,cAAC6B,EAAA,EAAD,IAAd,kCACA,cAAC,IAAD,CAAQ7B,KAAQ,cAAC8B,EAAA,EAAD,IAAhB,4BACA,wBAAQ,wBAAQ,yBAEpBhC,KAAK,QAPX,SAUA,eAAC,IAAD,CAAMX,MAAS,CAAES,QAAQ,QAAzB,UACQ,cAAC0B,EAAD,CAAS3B,KAAO,mCAChB,cAAC2B,EAAD,CAAS3B,KAAO,mCAChB,cAAC2B,EAAD,CAAS3B,KAAO,+BAChB,cAAC2B,EAAD,CAAS3B,KAAO,+BAChB,cAAC2D,EAAD,CAAS3D,KAAO,oDAAY+D,SAAU,CAAC,eAAM,eAAM,+BACnD,cAACJ,EAAD,CAAS3D,KAAO,oDAAY+D,SAAU,CAAC,eAAM,eAAM,oCAI3D,cAAC,IAAD,CAAK3B,OAAQ,CAAC,EAAE,IAAM5C,MAAO,CAAC8C,UAAU,GAAIC,aAAa,IAAzD,SACI,cAAC,IAAD,CAAKhD,KAAM,EAAX,SACI,cAAC,IAAD,CAASE,UAAW,OAApB,wDAGR,cAAC,IAAD,CAAO+C,QA1EK,CACZ,CACIT,MAAO,eACPU,UAAW,KACXC,IAAK,MAET,CACIX,MAAO,6BACPU,UAAW,WACXC,IAAK,YAET,CACIX,MAAO,iCACPU,UAAW,UACXC,IAAK,WAET,CACIX,MAAO,2BACPU,UAAW,QACXC,IAAK,SAET,CACIX,MAAO,2BACPU,UAAW,WACXC,IAAK,YAET,CACIX,MAAO,6BACPU,UAAW,eACXC,IAAK,gBAET,CACIX,MAAO,2BACPU,UAAW,eACXC,IAAK,gBAET,CACIX,MAAO,2BACPU,UAAW,UACXC,IAAK,WAET,CACIX,MAAO,2BACPU,UAAW,UACXC,IAAK,YA8BgBvC,KAAO,a,4CC7EzB,SAAS8D,GAAY3E,GAChC,OACI,qCACI,cAAC,IAAD,CAAKC,KAAM,GAAMC,MAAO,CAACC,UAAW,UAApC,SACI,eAAC,IAAWC,MAAZ,CAAkBC,MAAO,EAAGH,MAAO,CAACI,OAAO,IAAKO,KAAO,QAAvD,UAAgEb,EAAMU,KAAtE,SAGJ,cAAC,IAAD,CAAKT,KAAM,GAAIiC,MAAO,OAAtB,SACI,cAAC,IAAKtB,KAAN,CAAWV,MAAS,CAAEI,OAAQ,EAAGK,QAAS,GAA1C,SACI,cAAC,IAAD,CAAOE,KAAO,iBCGnB,SAAS+D,GAAW5E,GACC2D,IAAxBD,OAAwBC,IAAhBC,YAkChB,OACA,mCACI,eAAC,IAAD,WACI,eAAC,IAAD,CAAK3D,KAAM,GAAX,UACI,eAAC,IAAD,CAAMwC,MAAQ,kCACRE,QAAS,CACL,wBAAQ,wBACR,cAAC,IAAD,CAAQ5B,KAAM,cAAC8D,GAAA,EAAD,IAAd,0BACA,cAAC,IAAD,CAAQ9D,KAAM,cAAC+D,GAAA,EAAD,IAAd,0BACA,cAAC,IAAD,CAAQ/D,KAAM,cAACgE,GAAA,EAAD,IAAd,0BACA,cAAC,IAAD,CAAQhE,KAAM,cAACiE,GAAA,EAAD,IAAd,gCACA,wBAAQ,yBAEZnE,KAAK,QATX,UAYA,eAAC,IAAD,WACQ,cAAC,IAAD,UAAK,cAAC,IAAD,CAAQE,KAAM,cAAC8B,EAAA,EAAD,IAAd,4DACL,cAAC,IAAD,UAAK,cAAC,IAAD,CAAQ9B,KAAM,cAACgE,GAAA,EAAD,IAAd,4CACL,cAAC,IAAD,UAAK,cAAC,IAAD,CAAQhE,KAAM,cAACgE,GAAA,EAAD,IAAd,4CACL,cAAC,IAAD,UAAK,cAAC,IAAD,CAAQhE,KAAM,cAACgE,GAAA,EAAD,IAAd,2BACL,cAAC,IAAD,UAAK,cAAC,IAAD,CAAOlE,KAAO,QAAQX,MAAO,CAACI,OAAO,WAC1C,cAAC,IAAD,UAAK,cAAC,IAAD,CAAQO,KAAK,QAAQX,MAAO,CAACI,OAAO,OAApC,2CAGT,eAAC,IAAD,WACI,cAAC+B,EAAD,CAAS3B,KAAO,oCAChB,cAAC,IAAD,CAAKT,KAAM,GAAX,SACI,cAAC,IAAD,CAAQc,KAAM,cAACC,EAAA,EAAD,IAAmBH,KAAK,QAAQX,MAAO,CAAC8C,UAAU,OAAhE,oCAKZ,cAAC,IAAD,CAAOE,QAjEH,CACZ,CACIT,MAAO,6CACPU,UAAW,KACXC,IAAK,MAET,CACIX,MAAO,2BACPU,UAAW,WACXC,IAAK,YAET,CACIX,MAAO,wCACPU,UAAW,UACXC,IAAK,YAmDwBvC,KAAO,QAAQX,MAAS,CAAC8C,UAAU,SAGhE,cAAC,IAAD,CAAK/C,KAAM,GAAX,SACI,eAAC,IAAD,CAAMwC,MAAQ,kCAAS5B,KAAO,QAA9B,UACI,eAAC,IAAD,WACI,cAAC8D,GAAD,CAAajE,KAAK,gDAClB,cAAC2C,EAAD,CAAgB3C,KAAK,iCAEzB,cAAC,IAAD,CAAOwC,QAxDN,CACb,CACIT,MAAO,QACPU,UAAW,QAEf,CACIV,MAAO,6CACPU,UAAW,OAEf,CACIV,MAAO,2BACPU,UAAW,YA6CwBjD,MAAS,CAAC8C,UAAU,gB,mBCvFpD,SAASR,GAAYxC,GAChC,MAAsBiF,IAAKC,UAApBC,EAAP,oBAEAC,qBAAU,WACND,EAAYE,eAAe,CACvBC,UAAWC,IACXC,YAAa,GACbC,aAAa,GACbC,WAAW,GACXC,UAAU,GACVC,WAAW,MAGhB,IAEH,IAAMC,EAAS,CACXC,SAAU,CAAE7F,KAAM,GAClB8F,WAAY,CAAE9F,KAAM,KAuElBsF,EAAW,WACb,IAAMS,EAAI,IAAIC,KACd,OAAQD,EAAEE,cAAgB,KAAOF,EAAEG,WAAW,GAAK,IAAMH,EAAEI,WAgB/D,OACA,mCACI,eAAC,IAAD,CAAM3D,MAAM,yCAAWC,KAAO,QACxBC,QAAS,CACL,wBAAQ,wBAAQ,wBAChB,cAAC,IAAD,CAAQ5B,KAAM,cAAC6B,EAAA,EAAD,IAAd,kCAEA,cAAC,IAAD,CAAQ7B,KAAQ,cAAC8B,EAAA,EAAD,IAAmBxB,QAAS,WAAOgF,MAAM,iBAAzD,wCACA,wBAAQ,wBAAQ,yBAEpBxF,KAAK,QARX,UAUI,eAAC,IAAD,6BACQgF,GADR,IAEIS,KAAMnB,EACNoB,SA1FK,SAACC,GACd/E,QAAQC,IAAI8E,GACZ,IAAMC,EAAatB,EAAYuB,iBAC/BjF,QAAQC,IAAI+E,IAoFR,UAKI,cAAC,IAAK7F,KAAN,CAAY+F,MAAQ,4BAAQjG,KAAO,cAAnC,SAAiD,cAAC,IAAD,MACjD,cAAC,IAAKE,KAAN,CAAY+F,MAAQ,SAASjG,KAAO,cAApC,SAAkD,cAAC,IAAD,MAClD,cAAC,IAAKE,KAAN,CAAY+F,MAAQ,QAAQjG,KAAO,aAAnC,SAAgD,cAAC,IAAD,MAChD,cAAC,IAAKE,KAAN,CAAY+F,MAAQ,qBAAMjG,KAAO,YAAjC,SAA6C,cAAC,IAAD,MAC7C,cAAC,IAAKE,KAAN,CAAY+F,MAAQ,eAAKjG,KAAO,aAAhC,SAA6C,cAAC,IAAD,MAC7C,eAAC,IAAKE,KAAN,CAAWmF,WAAU,6BAAOF,EAAOE,YAAd,IAA0Ba,OAAQ,IAAvD,UACI,cAAC,IAAD,CAAQlE,KAAO,UAAf,kCACA,cAAC,IAAD,CAAQA,KAAK,UAAUmE,SAAS,SAASxF,QA9BrC,WAChB,IAAMoF,EAAatB,EAAYuB,iBAC/BL,MAAM,QACN5E,QAAQC,IAAI+E,IA2BA,iCAKR,cAAC,IAAD,CAAOvD,QArFC,CACZ,CACIT,MAAO,eACPU,UAAW,OACXC,IAAK,QAET,CACIX,MAAO,4BACPU,UAAW,SACXC,IAAK,UAET,CACIX,MAAO,SACPU,UAAW,QACXC,IAAK,SAET,CACIX,MAAO,QACPU,UAAW,OACXC,IAAK,QAET,CACIX,MAAO,qBACPU,UAAW,OACXC,IAAK,QAET,CACIX,MAAO,2BACPU,UAAW,QACXC,IAAK,SAET,CACIX,MAAO,kCACPU,UAAW,gBACXC,IAAK,kBAmDoB0D,KAlGpB,CACT,CACI1D,IAAK,IACL2D,KAAM,aACNC,OAAQ,eACRC,MAAO,SACPC,KAAM,SACNxG,KAAM,2EACNyG,MAAO,KACPC,cAAe,IAyFsBvG,KAAK,e,wBCpIvC,SAASwG,GAAcrH,GAClC,MAAsBiF,IAAKC,UAApBC,EAAP,oBAEAC,qBAAU,WACND,EAAYE,eAAe,CACvBC,UAAWC,IACXC,YAAa,GACbC,aAAa,GACbC,WAAW,GACXC,UAAU,GACVC,WAAW,MAGhB,IAEH,IAAMC,EAAS,CACXC,SAAU,CAAE7F,KAAM,GAClB8F,WAAY,CAAE9F,KAAM,KA0DlBsF,EAAW,WACb,IAAMS,EAAI,IAAIC,KACd,OAAQD,EAAEE,cAAgB,KAAOF,EAAEG,WAAW,GAAK,IAAMH,EAAEI,WA2B/D,OACA,qCACI,sBAAKjE,UAAU,oBAAf,UACI,eAAC,IAAD,CAAKW,OAAQ,GAAb,UACI,cAAC,IAAD,CAAK7C,KAAM,EAAX,SACI,cAAC,IAAD,CAAMwC,MAAM,4BAAa6E,MAAO,mBAAGC,KAAK,IAAR,kBAAsBrH,MAAO,CAAEsH,MAAO,KAAtE,SACI,cAAC,KAAD,6BAAYxH,GAAZ,aACI,cAAC,IAAD,CAAQe,KAAM,cAAC0G,GAAA,EAAD,IAAd,oCAIZ,cAAC,IAAD,CAAKxH,KAAM,EAAX,SACI,cAAC,IAAD,CAAMwC,MAAM,sBAAY6E,MAAO,mBAAGC,KAAK,IAAR,kBAAsBrH,MAAO,CAAEsH,MAAO,KAArE,SACI,cAAC,KAAD,6BAAYxH,GAAZ,aACI,cAAC,IAAD,CAAQe,KAAM,cAAC0G,GAAA,EAAD,IAAd,uCAKhB,uBACA,eAAC,IAAD,CAAK3E,OAAQ,GAAb,UACI,cAAC,IAAD,CAAK7C,KAAM,EAAX,SACI,cAAC,IAAD,CAAMwC,MAAM,4BAAa6E,MAAO,mBAAGC,KAAK,IAAR,kBAAsBrH,MAAO,CAAEsH,MAAO,KAAtE,SACI,cAAC,KAAD,6BAAYxH,GAAZ,aACI,cAAC,IAAD,CAAQe,KAAM,cAAC0G,GAAA,EAAD,IAAd,oCAIZ,cAAC,IAAD,CAAKxH,KAAM,EAAX,SACI,cAAC,IAAD,CAAMwC,MAAM,sBAAY6E,MAAO,mBAAGC,KAAK,IAAR,kBAAsBrH,MAAO,CAAEsH,MAAO,KAArE,SACI,cAAC,KAAD,6BAAYxH,GAAZ,aACI,cAAC,IAAD,CAAQe,KAAM,cAAC0G,GAAA,EAAD,IAAd,0CAOpB,uBACA,eAAC,IAAD,CAAMhF,MAAM,yCAAWC,KAAO,QACxBC,QAAS,CACL,wBAAQ,wBAAQ,wBAChB,cAAC,IAAD,CAAQ5B,KAAM,cAAC6B,EAAA,EAAD,IAAd,kCACA,cAAC,IAAD,CAAQ7B,KAAQ,cAAC8B,EAAA,EAAD,IAAmBxB,QAAS,WAnEnC8D,EAAYuB,iBAE/BL,MAAM,WAiEI,4BACA,cAAC,IAAD,CAAQtF,KAAQ,cAAC8B,EAAA,EAAD,IAAmBxB,QAAS,WAAOgF,MAAM,iBAAzD,4BACA,wBAAQ,wBAAQ,yBAEpBxF,KAAK,QARX,UAUI,eAAC,IAAD,6BACQgF,GADR,IAEIS,KAAMnB,EACNoB,SA7HK,SAACC,GACd/E,QAAQC,IAAI8E,GACZ,IAAMC,EAAatB,EAAYuB,iBAC/BjF,QAAQC,IAAI+E,IAuHR,UAMI,cAAC,IAAK7F,KAAN,CAAYC,KAAO,QAAQ8F,MAAQ,eAAKjG,KAAO,YAA/C,SAA2D,cAAC,IAAD,MAC3D,cAAC,IAAKE,KAAN,CAAY+F,MAAQ,4BAAQjG,KAAO,cAAnC,SAAiD,cAAC,IAAD,MACjD,cAAC,IAAKE,KAAN,CAAY+F,MAAQ,4BAAQjG,KAAO,eAAnC,SAAkD,cAAC,IAAD,MAClD,cAAC,IAAKE,KAAN,CAAY+F,MAAQ,kCAASjG,KAAO,aAApC,SAAiD,cAAC,IAAD,MACjD,cAAC,IAAKE,KAAN,CAAY+F,MAAQ,qBAAMjG,KAAO,YAAjC,SAA6C,cAAC,IAAD,MAC7C,cAAC,IAAKE,KAAN,CAAY+F,MAAQ,eAAKjG,KAAO,aAAhC,SAA6C,cAAC,IAAD,MAC7C,eAAC,IAAKE,KAAN,CAAWmF,WAAU,6BAAOF,EAAOE,YAAd,IAA0Ba,OAAQ,IAAvD,UACI,cAAC,IAAD,CAAQlE,KAAO,UAAf,kCACA,cAAC,IAAD,CAAQA,KAAK,UAAUmE,SAAS,SAAhC,iCAKR,cAAC,IAAD,CAAO3D,QAvIC,CACZ,CACIT,MAAO,eACPU,UAAW,OACXC,IAAK,QAET,CACIX,MAAO,4BACPU,UAAW,SACXC,IAAK,UAET,CACIX,MAAO,4BACPU,UAAW,YACXC,IAAK,aAET,CACIX,MAAO,kCACPU,UAAW,QACXC,IAAK,SAET,CACIX,MAAO,qBACPU,UAAW,OACXC,IAAK,QAET,CACIX,MAAO,2BACPU,UAAW,QACXC,IAAK,SAET,CACIX,MAAO,2BACPU,UAAW,QACXC,IAAK,UAqGoBvC,KAAK,gBCjL3B,SAAS6G,GAAW1H,GAC/B,IAAM2H,EAAO,CACT,CAAEC,YAAc,MAAOC,KAAO,cAAC,GAAD,KAC9B,CAAED,YAAc,MAAOC,KAAO,cAAC,GAAD,KAC9B,CAAED,YAAc,MAAOC,KAAO,cAACrF,EAAD,KAC9B,CAAEoF,YAAc,MAAQC,KAAO,cAACpE,EAAD,KAC/B,CAAEmE,YAAc,MAAQC,KAAO,cAAC1D,EAAD,KAC/B,CAAEyD,YAAc,MAAQC,KAAO,cAACzD,EAAD,KAC/B,CAAEwD,YAAc,MAAQC,KAAO,cAACrD,EAAD,KAC/B,CAAEoD,YAAc,MAAQC,KAAO,cAACnD,EAAD,KAC/B,CAAEkD,YAAc,MAAQC,KAAO,cAACjD,GAAD,MAUnC,OACQ,mCATc,WAAM,IAAD,gBACD+C,GADC,IACvB,2BAA4B,CAAC,IAAlBG,EAAiB,QACxB,GAAIA,EAAQF,cAAgB5H,EAAM4H,YAC9B,OAAOE,EAAQD,MAHA,+BAUdE,KCvBjB,IAAQC,GAA2BC,IAA3BD,OAAQE,GAAmBD,IAAnBC,MAAOC,GAAYF,IAAZE,QAEfC,GAAYC,IAAZD,QAGO,SAASE,KACpB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,mBAAS,IAAzC,mBAAO9D,EAAP,KAAiBiE,EAAjB,KAGMC,EAAY,SAACvF,EAAK1C,GACpBgI,EAAW,OAACtF,QAAD,IAACA,OAAD,EAACA,EAAKA,MAGrB,OACI,mCACA,eAAC,IAAD,WACI,cAAC4E,GAAD,CACI9H,MAAS,CACL0I,gBAAiB,QACjBzI,UAAU,OACV0I,cAAc,UAJtB,SAQI,eAAC,IAAD,WACI,cAAC,IAAD,CAAK5I,KAAM,EAAX,SACI,cAAC6I,EAAA,EAAD,CAAc5I,MAAO,CAAEK,SAAU,OAAQwI,MAAO,QAClC1H,QAAS,WAAQoH,GAAcD,QAEjD,cAAC,IAAD,CAAMvI,KAAM,GAAIC,MAAO,CAAC8C,UAAU,OAAQgG,WAAW,QAArD,SACI,cAAC5I,EAAA,EAAD,CAAOC,MAAO,EAAd,+DAIhB,eAAC,IAAD,WACI,cAAC6H,GAAD,CACIhI,MAAO,CACH+I,SAAU,OACVC,OAAQ,QACRC,KAAM,GAEVC,QAAS,KAAMC,aAAW,EAACb,UAAWA,EAN1C,SAQI,eAAC,IAAD,CAAMc,KAAK,SAASC,MAAM,OAA1B,UACI,eAACnB,GAAD,CAAoBrH,KAAM,cAACyI,EAAA,EAAD,IAAkB/G,MAAM,wCAAlD,UACI,cAAC,IAAK7B,KAAN,CAAqBS,QAAS,SAAC+B,GAAQuF,EAAUvF,IAAjD,sCAAe,OACf,cAAC,IAAKxC,KAAN,CAAqBS,QAAS,SAAC+B,GAAQuF,EAAUvF,IAAjD,kDAAe,SAFN,QAKb,eAACgF,GAAD,CAAoBrH,KAAM,cAAC0I,EAAA,EAAD,IAAkBhH,MAAM,eAAlD,UACI,eAAC2F,GAAD,CAAqBrH,KAAM,cAAC0I,EAAA,EAAD,IAAkBhH,MAAM,2BAAnD,UACI,cAAC,IAAK7B,KAAN,CAAqBS,QAAS,SAAC+B,GAAQuF,EAAUvF,IAAjD,qCAAe,OACf,cAAC,IAAKxC,KAAN,CAAqBS,QAAS,SAAC+B,GAAQuF,EAAUvF,IAAjD,iDAAe,OACf,cAAC,IAAKxC,KAAN,CAAqBS,QAAS,SAAC+B,GAAQuF,EAAUvF,IAAjD,6BAAe,OACf,cAAC,IAAKxC,KAAN,CAAqBS,QAAS,SAAC+B,GAAQuF,EAAUvF,IAAjD,4BAAe,SAJN,SAMb,eAACgF,GAAD,CAAqBrH,KAAM,cAAC0I,EAAA,EAAD,IAAkBhH,MAAM,2BAAnD,UACI,cAAC,IAAK7B,KAAN,CAAqBS,QAAS,SAAC+B,GAAQuF,EAAUvF,IAAjD,qCAAe,OACf,cAAC,IAAKxC,KAAN,CAAqBS,QAAS,SAAC+B,GAAQuF,EAAUvF,IAAjD,qCAAe,SAFN,WAPJ,QAYb,eAACgF,GAAD,CAAoBrH,KAAM,cAACC,EAAA,EAAD,IAAoByB,MAAM,eAApD,UACI,eAAC2F,GAAD,CAAqBrH,KAAM,cAAC2I,EAAA,EAAD,IAAkBjH,MAAM,2BAAnD,UACI,cAAC,IAAK7B,KAAN,CAAqBS,QAAS,SAAC+B,GAAQuF,EAAUvF,IAAjD,2CAAe,OACf,cAAC,IAAKxC,KAAN,CAAqBS,QAAS,SAAC+B,GAAQuF,EAAUvF,IAAjD,2CAAe,OACf,cAAC,IAAKxC,KAAN,CAAqBS,QAAS,SAAC+B,GAAQuF,EAAUvF,IAAjD,2CAAe,SAHN,SAKb,cAAC,IAAKxC,KAAN,CAAoBS,QAAS,SAAC+B,GAAQuF,EAAUvF,IAAhD,wDAAe,MACf,cAAC,IAAKxC,KAAN,CAAoBS,QAAS,SAAC+B,GAAQuF,EAAUvF,IAAhD,qEAAe,QAPN,QASb,eAACgF,GAAD,CAAoBrH,KAAM,cAAC4I,EAAA,EAAD,IAA4BlH,MAAM,MAA5D,UACI,cAAC,IAAK7B,KAAN,CAAoBS,QAAS,SAAC+B,GAAQuF,EAAUvF,IAAhD,iBAAe,MACf,cAAC,IAAKxC,KAAN,CAAoBS,QAAS,SAAC+B,GAAQuF,EAAUvF,IAAhD,iBAAe,QAFN,QAIb,eAACgF,GAAD,CAAoBrH,KAAM,cAACY,EAAA,EAAD,IAAkBc,MAAM,qBAAlD,UACI,cAAC,IAAK7B,KAAN,CAAoBS,QAAS,SAAC+B,GAAQuF,EAAUvF,IAAhD,+BAAe,MACf,cAAC,IAAKxC,KAAN,CAAoBS,QAAS,SAAC+B,GAAQuF,EAAUvF,IAAhD,iDAAe,QAFN,aAMrB,cAAC,IAAD,CAAQjB,UAAU,cAAlB,SACI,cAACgG,GAAD,CACIjI,MAAO,CACHI,OAAQ,cACR2I,SAAU,UACVC,OAAQ,QACRU,UAAW,KALnB,SAQI,cAAClC,GAAD,CAAYE,YAAenD,gB,sDC3FhC,SAASoF,KACpB,MAAkCtB,oBAAS,GAA3C,mBAAOuB,EAAP,KAAkBC,EAAlB,KACA,EAAoB9E,IAAKC,UAAlB8E,EAAP,oBAEMC,EAAU,IAAIC,KAEpB9E,qBAAU,cAEP,IAmGH,OACI,8BACI,cAAC,KAAD,CAAO3C,MAAM,wDAAgB0H,QAASL,EAAWM,KA9DzC,WACZ,IAAM3D,EAAauD,EAAUtD,iBACvB2D,EAAU5D,EAAU,GACpB6D,EAAgB7D,EAAU,SAIhC8D,KAAM,CACFC,OAAQ,OACRC,IAJQ,oDAKR3D,KAAM,CACF4D,GAAIL,EACJM,SAAUL,GAEdM,OAAQ,CAAEC,iBAAiB,KAE5BC,MAAK,SAAUC,GAAW,IAAD,QAExB1E,MAAK,UAAC0E,EAASjE,YAAV,aAAC,EAAevF,SACrBE,QAAQC,IAAIqJ,GAGZd,EAAQe,IAAI,QAAZ,UAAqBD,EAASjE,YAA9B,aAAqB,EAAemE,OACpChB,EAAQe,IAAI,MAAOX,GACnBE,KAAMW,SAASC,QAAQC,OAAvB,yCAA2DL,EAASjE,YAApE,aAA2D,EAAemE,OAtD9EV,KAAM,CACFC,OAAQ,MACRC,IAJQ,+EAKR3D,KAAM,KAEPgE,MAAK,SAAUC,GAAW,IAAD,EACxB1E,MAAK,UAAC0E,EAASjE,YAAV,aAAC,EAAevF,SACrBE,QAAQC,IAAI,OAASqJ,MACtBM,OAAM,SAAUC,GACf7J,QAAQC,IAAI4J,GACRA,EAAMP,UACN1E,MAAK,OAACiF,QAAD,IAACA,OAAD,EAACA,EAAO/J,SAEbE,QAAQC,IAAI4J,EAAMP,SAASjE,MAC3BrF,QAAQC,IAAI4J,EAAMP,SAASQ,QAC3B9J,QAAQC,IAAI4J,EAAMP,SAASI,UACpBG,EAAME,SAIb/J,QAAQC,IAAI4J,EAAME,SAClB/J,QAAQC,IAAI4J,IAGZ7J,QAAQC,IAAI,QAAS4J,EAAM/J,SAE/BE,QAAQC,IAAI4J,EAAMV,WA8Ba,OAA1B,UAAAG,EAASjE,YAAT,eAAe2E,QAChB1B,GAAa,GAEbA,GAAa,MAGlBsB,OAAM,SAAUC,GACf7J,QAAQC,IAAI4J,GACRA,EAAMP,UAENtJ,QAAQC,IAAI4J,EAAMP,SAASjE,MAC3BrF,QAAQC,IAAI4J,EAAMP,SAASQ,QAC3B9J,QAAQC,IAAI4J,EAAMP,SAASI,UAEtBG,EAAME,SAIX/J,QAAQC,IAAI4J,EAAME,SAClB/J,QAAQC,IAAI4J,IAIZ7J,QAAQC,IAAI,QAAS4J,EAAM/J,SAE/BE,QAAQC,IAAI4J,EAAMV,YAW8Cc,SAnGnD,WACjB3B,GAAa,IAkGT,SAEA,eAAC,IAAD,CACIrJ,KAAK,QACL4F,KAAM0D,EACNlE,SAAU,CAAE7F,KAAM,GAClB8F,WAAY,CAAE9F,KAAM,IACpBC,MAAS,CAAC2I,cAAe,UACzB8C,cAAe,CAAEC,UAAU,GAC3BrF,SAbK,SAACC,KAcNqF,eAlBW,aAUf,UAUI,cAAC,IAAKjL,KAAN,CACI+F,MAAM,KACNjG,KAAK,KACLoL,MAAO,CAAC,CAAEC,UAAU,EAAMxK,QAAS,8CAHvC,SAKI,cAAC,IAAD,MAGJ,cAAC,IAAKX,KAAN,CACI+F,MAAM,WACNjG,KAAK,WACLoL,MAAO,CAAC,CAAEC,UAAU,EAAMxK,QAAS,iDAHvC,SAMI,cAAC,IAAMyK,SAAP,MAGJ,cAAC,IAAKpL,KAAN,CAAWF,KAAK,WAAWuL,cAAc,UAAUlG,WAAY,CAAEa,OAAQ,EAAG3G,KAAM,IAAlF,SACI,cAACiM,GAAA,EAAD,mCCrILC,OATf,WACE,OACE,sBAAKhK,UAAU,MAAf,UACI,cAAC0H,GAAD,IACA,cAACvB,GAAD,QCEO8D,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.a6633810.chunk.js","sourcesContent":["import React from 'react';\nimport {\n    Col,\n\n    Form,\n    Input,\n    Typography,\n} from \"antd\";\n\n\nexport default function PropertyTitle(props){\n    return (\n        <Col span={4}   style={{textAlign: 'center'}} >\n            <Typography.Title level={5} style={{margin:10, fontSize:\"revert\"}} >{props.text} </Typography.Title>\n        </Col>\n    );\n}\n","import React  from 'react';\nimport {\n    Button,\n    Col,\n    Form,\n    Input,\n    Row,\n    Typography\n} from \"antd\";\nimport { SearchOutlined} from \"@ant-design/icons\";\nimport PropertyTitle from \"../Text/PropertyTitle\";\n\n\nexport default function SearchNInput(props){\n    return (\n        <>\n            <PropertyTitle text = {props.name}/>\n            <Col span={8} >\n                <Row style = {{ margin: 0, padding: 0}}>\n                    <Col span={12}>\n                        <Form.Item style = {{ margin: 0, padding: 0}}>\n                            <Input size = \"small\" disabled/>\n                        </Form.Item>\n                    </Col>\n\n                    <Col span={12}>\n                        <Form.Item style = {{ margin: 0, padding: 0}}>\n                            <Button size = \"small\" icon = {<SearchOutlined/>} block\n                            > {props.name} 검색\n                            </Button>\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Col>\n\n        </>\n    );\n}\n","import React from 'react';\nimport {\n    Button,\n    Col, DatePicker,\n    Form,\n    Row,\n    Typography,\n    Dropdown, Menu, message,\n} from \"antd\";\nimport {UserOutlined} from \"@ant-design/icons\";\nimport PropertyText from \"../Text/PropertyTitle\";\n\n\nexport default function FromTo(props){\n\n    const dateFormat = 'MM/DD/YY';\n\n    function handleMenuClick(e) {\n        message.info('Click on menu item.');\n        console.log('click', e);\n    }\n\n    function handleButtonClick(e) {\n        message.info('Click on left button.');\n        console.log('click left button', e);\n    }\n    const menu = (\n        <Menu onClick={handleMenuClick}>\n            <Menu.Item key=\"1\" icon={<UserOutlined />}>\n                1st menu item\n            </Menu.Item>\n            <Menu.Item key=\"2\" icon={<UserOutlined />}>\n                2nd menu item\n            </Menu.Item>\n            <Menu.Item key=\"3\" icon={<UserOutlined />}>\n                3rd menu item\n            </Menu.Item>7\n        </Menu>\n    );\n    return (\n        <>\n            <PropertyText text = {props.name}/>\n            <Col span={8}>\n                <Row style = {{ margin: 0, padding: 0}}>\n                    <Col span={6}>\n                        <Form.Item style = {{ margin: 0, padding: 0}}>\n                            <DatePicker size =\"small\" format={dateFormat}/>\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item style = {{ margin: 0, padding: 0}}>\n                            <DatePicker size =\"small\" format={dateFormat}/>\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item style = {{ margin: 0, padding: 0}}>\n\n                            <Dropdown.Button  size =\"small\" onClick={handleButtonClick} overlay={menu} block>\n                                hello world\n                            </Dropdown.Button>\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item style = {{ margin: 0, padding: 0}}>\n                            <Button size =\"small\" block>초기화</Button>\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Col>\n\n        </>\n    );\n}\n","import React from 'react';\nimport {\n    Form,\n    Typography,\n    Dropdown, Menu, message, Col,\n} from \"antd\";\nimport {UserOutlined, DownOutlined} from \"@ant-design/icons\";\nimport PropertyTitle from \"../Text/PropertyTitle\";\n\nexport default function BODropdownHalf(props){\n\n    function handleMenuClick(e) {\n        message.info('Click on menu item.');\n        console.log('click', e);\n    }\n    const ColFormStyle = {\n        border:'none',\n    };\n\n    function handleButtonClick(e) {\n        message.info('Click on left button.');\n        console.log('click left button', e);\n    }\n    const menu = (\n        <Menu onClick={handleMenuClick}>\n            <Menu.Item key=\"1\" icon={<UserOutlined />}>\n                1st menu item\n            </Menu.Item>\n            <Menu.Item key=\"2\" icon={<UserOutlined />}>\n                2nd menu item\n            </Menu.Item>\n            <Menu.Item key=\"3\" icon={<UserOutlined />}>\n                3rd menu item\n            </Menu.Item>\n        </Menu>\n    );\n    return (\n        <>\n            <PropertyTitle text = {props.name}/>\n            <Col span={8} style={ColFormStyle} align={\"left\"} >\n                <Form.Item style = {{ margin: 0, padding: 0}}>\n                    <Dropdown overlay={menu}>\n                        <a className=\"ant-dropdown-link\" onClick={e => handleMenuClick(e)}>\n                            hello world  <DownOutlined />\n                        </a>\n                    </Dropdown>\n                    {/*<Dropdown.Button onClick={handleButtonClick} overlay={menu} size =\"small\" >*/}\n                    {/*    hello world*/}\n                    {/*</Dropdown.Button>*/}\n                    {/*<Dropdown overlay={menu}>*/}\n                    {/*    <div>*/}\n                    {/*        hello world*/}\n                    {/*    </div>*/}\n                    {/*</Dropdown>*/}\n                </Form.Item>\n            </Col>\n\n        </>\n    );\n}\n","import React from 'react';\nimport {\n    Col,\n\n    Form,\n    Input,\n\n} from \"antd\";\nimport PropertyTitle from \"../Text/PropertyTitle\";\n\n\nexport default function BOInput(props){\n    return (\n        <>\n            <PropertyTitle text = {props.name}/>\n            <Col span={8} align={\"left\"}>\n                <Form.Item style = {{ margin: 0, padding: 0}}>\n                    <Input size=\"small\" defaultValue={props.value}/>\n                </Form.Item>\n            </Col>\n\n        </>\n    );\n}\n","import React from 'react';\nimport {\n    Button, Card,\n    Col,\n    Divider,\n    Form,\n    Row,\n    Space,\n    Table,\n    Typography\n} from \"antd\";\nimport {CheckOutlined,RedoOutlined } from \"@ant-design/icons\";\nimport SearchNInput from \"../component/Input/SearchNInput\";\nimport FromTo from \"../component/Input/FromTo\";\nimport BODropdownHalf from \"../component/Input/BODropdownHalf\";\nimport BOInput from \"../component/Input/BOInput\";\n\n\n\nexport default function ProductInfo(props){\n\n    const columns = [\n        {\n            title: '번호',\n            dataIndex: 'no',\n            key: 'no',\n        },\n        {\n            title: '상품명',\n            dataIndex: 'name',\n            key: 'name',\n        },\n        {\n            title: 'SAP 코드',\n            dataIndex: 'sap',\n            key: 'sap',\n        },\n        {\n            title: '브랜드',\n            dataIndex: 'brand',\n            key: 'brand',\n        },\n        {\n            title: '분류',\n            dataIndex: 'class',\n            key: 'class',\n        },\n        {\n            title: '고시품목',\n            dataIndex: 'bcast',\n            key: 'bcast',\n        },\n        {\n            title: '수정자',\n            dataIndex: 'modifier',\n            key: 'modifier',\n        },\n        {\n            title: '수정일',\n            dataIndex: 'mod_date',\n            key: 'mod_date',\n        },\n        {\n            title: '등록일시',\n            dataIndex: 'create_date',\n            key: 'create_date',\n        },\n    ];\n    return (\n    <>\n        <Card title=\"상품 정보 관리\" type = \"inner\"\n              actions={[\n                  <div/>, <div/>, <div/>,\n                  <Button icon={<RedoOutlined />}> 초기화 </Button>,\n                  <Button icon = {<CheckOutlined />}> 조회 </Button>,\n                  <Button icon = {<CheckOutlined />}> 조회 </Button>,\n                  <div/>, <div/>, <div/>,\n              ]}\n              size=\"small\"\n        >\n            <Row gutter={[0,0]} size = \"small\" >\n                <SearchNInput name = \"브랜드\" style={{ display: \"flex\"}}/>\n                <FromTo name = \"등록일자\"/>\n                <SearchNInput name = \"분류\"/>\n                <FromTo name = \"수정일자\"/>\n                <BODropdownHalf name = \"속성그룹\"/>\n                <BOInput name = \"수정자\"/>\n                <BODropdownHalf name = \"고시품목\"/>\n                <BOInput name = \"SAP코드\"/>\n                <BOInput name = \"상품명\"/>\n            </Row>\n        </Card>\n        <Row gutter={[0,24]}  style={{marginTop:10, marginBottom:10}}>\n            <Col span={1}>\n                <Button  textAlign={'left'} >상품 일괄 다운로드 </Button>\n            </Col>\n        </Row>\n        <Table columns={columns} size=\"small\"/>\n    </>\n    );\n}\n","import React from 'react';\nimport {\n    Form,\n    Typography,\n    Dropdown, Menu, message, Col,\n} from \"antd\";\nimport {UserOutlined} from \"@ant-design/icons\";\n\nexport default function BODropdownLine(props){\n\n    function handleMenuClick(e) {\n        message.info('Click on menu item.');\n        console.log('click', e);\n    }\n    const ColFormStyle = {\n        border:'none',\n    };\n\n    function handleButtonClick(e) {\n        message.info('Click on left button.');\n        console.log('click left button', e);\n    }\n    const menu = (\n        <Menu onClick={handleMenuClick}>\n            <Menu.Item key=\"1\" icon={<UserOutlined />}>\n                1st menu item\n            </Menu.Item>\n            <Menu.Item key=\"2\" icon={<UserOutlined />}>\n                2nd menu item\n            </Menu.Item>\n            <Menu.Item key=\"3\" icon={<UserOutlined />}>\n                3rd menu item\n            </Menu.Item>\n        </Menu>\n    );\n    return (\n        <>\n            <Col span={12}   style={{textAlign: 'center'}} size = \"small\">\n                <Typography.Title  level={5}>{props.name}</Typography.Title>\n            </Col>\n            <Col span={12} style={ColFormStyle} align={\"left\"}>\n                <Form.Item style = {{ margin: 5, padding: 0}}>\n                    <Dropdown.Button onClick={handleButtonClick} overlay={menu} size = \"small\">\n                        hello\n                    </Dropdown.Button>\n                </Form.Item>\n            </Col>\n\n        </>\n    );\n}\n","import React from 'react';\nimport {\n    Col,\n\n    Form,\n    Input,\n    Typography,\n} from \"antd\";\n\n\nexport default function BOEmpty(props){\n    return (\n        <>\n            <Col span={3}/>\n            <Col span={9}/>\n        </>\n    );\n}\n","import React from 'react';\nimport {\n    Col,\n\n    Form,\n    Input,\n    Typography,\n} from \"antd\";\n\n\nexport default function PropertyData(props){\n    return (\n        <>\n            <Col span={props.span} textAlign={'left'}  style={{textAlign: 'left'}} >\n                <Typography.Title level={5} style={{margin:10}}>{props.text} </Typography.Title>\n            </Col>\n        </>\n    );\n}\n","import React from 'react';\nimport {\n    Form,\n    Typography,\n    Dropdown, Menu, message, Col,\n} from \"antd\";\nimport {UserOutlined} from \"@ant-design/icons\";\nimport PropertyTitle from \"../Text/PropertyTitle\";\nimport PropertyData from \"../Text/PropertyData\";\n\nexport default function BOViewHalfLine(props){\n\n    return (\n        <>\n            <PropertyTitle text = {props.name}/>\n            <PropertyData text = \"0\" span = \"8\"/>\n       </>\n    );\n}\n","import React from 'react';\nimport {\n    Button, Card,\n    Col,\n    Divider,\n    Form, Input,\n    Row,\n    Space,\n    Table,\n    Typography\n} from \"antd\";\nimport {CheckOutlined, LockOutlined, RedoOutlined} from \"@ant-design/icons\";\nimport SearchNInput from \"../component/Input/SearchNInput\";\nimport FromTo from \"../component/Input/FromTo\";\nimport BODropdownHalf from \"../component/Input/BODropdownHalf\";\nimport BOInput from \"../component/Input/BOInput\";\nimport BODropdownLine from \"../component/Input/BODropdownLine\";\nimport BOEmpty from \"../component/Input/BOEmpty\";\nimport BOViewHalfLine from \"../component/Input/BOViewHalfLine\";\n\n\n\nexport default function BatchUpdate(props){\n    const { Column, ColumnGroup } = Table;\n\n    const columns = [\n        {\n            title: '번호',\n            dataIndex: 'no',\n            key: 'no',\n            column: [\n                {\n                    title: '번호',\n                    dataIndex: 'no',\n                    key: 'no',\n                },\n                {\n                    title: '번호',\n                    dataIndex: 'no',\n                    key: 'no',\n                }\n                ]\n        },\n        {\n            title: '등록일',\n            dataIndex: 'regDate',\n            key: 'regDate',\n        },\n        {\n            title: '작업상태',\n            dataIndex: 'status',\n            key: 'status',\n        },\n        {\n            title: '시작일시',\n            dataIndex: 'startDate',\n            key: 'startDate',\n        },\n        {\n            title: '종료일시',\n            dataIndex: 'endDate',\n            key: 'endDate',\n        },\n    ];\n    return (\n    <>\n        <Card title=\"상품 정보 일괄 등록\" size=\"small\">\n            <Card title = \"최근 업로드 작업\" size=\"small\">\n                <Table columns={columns} size=\"small\"/>\n            </Card>\n            <Row  style = {{ padding:\"10px\"}} size=\"small\">\n                <BODropdownHalf name =\"고시품목 선택\"></BODropdownHalf>\n                <BOEmpty/>\n                <BODropdownHalf name =\"파일 선택\"></BODropdownHalf>\n                <Col span={9}>\n                    <Row>\n                        <Col span={12}>\n                            <Button icon = {<LockOutlined />} block>검증</Button>\n                        </Col>\n                        <Col span={12}>\n                            <Button icon = {<LockOutlined />} block>양식 다운로드</Button>\n                        </Col>\n                    </Row>\n                </Col>\n                <Col span={3}/>\n                <BOViewHalfLine name = \"총 건수\"/>\n                <BOViewHalfLine name = \"불가건수\"/>\n            </Row>\n\n            <Table  scroll={{ x: 1500 }} size = \"small\">\n                <ColumnGroup title=\"처리결과\">\n                    <Column title=\"처리가능여부\" dataIndex=\"firstName\" key=\"firstName\" />\n                    <Column title=\"오류내용\" dataIndex=\"lastName\" key=\"lastName\" />\n                </ColumnGroup>\n                <Column title=\"SAP 코드\" dataIndex=\"age\" key=\"age\" />\n                <ColumnGroup title=\"상품 고시 정보\">\n                    <Column title=\"용량\" dataIndex=\"firstName\" key=\"firstName\" />\n                    <Column title=\"제품주요사용처\" dataIndex=\"lastName\" key=\"lastName\" />\n                    <Column title=\"사용기한\" dataIndex=\"firstName\" key=\"firstName\" />\n                    <Column title=\"사용방법\" dataIndex=\"lastName\" key=\"lastName\" />\n                    <Column title=\"제조사 및 제조..\" dataIndex=\"firstName\" key=\"firstName\" />\n                    <Column title=\"제조국\" dataIndex=\"lastName\" key=\"lastName\" />\n                    <Column title=\"전성분\" dataIndex=\"firstName\" key=\"firstName\" />\n                    <Column title=\"기능성 화장..\" dataIndex=\"lastName\" key=\"lastName\" />\n                    <Column title=\"사용할때 주..\" dataIndex=\"firstName\" key=\"firstName\" />\n                    <Column title=\"품질 보증기준\" dataIndex=\"lastName\" key=\"lastName\" />\n                    <Column title=\"소비자 상담\" dataIndex=\"firstName\" key=\"firstName\" />\n                    <Column title=\"오류내용\" dataIndex=\"lastName\" key=\"lastName\" />\n                </ColumnGroup>\n            </Table>\n        </Card>\n    </>\n    );\n}\n","import React from 'react';\nimport {\n    Form,\n    Typography,\n    Dropdown, Menu, message, Col, Input,\n} from \"antd\";\nimport {UserOutlined} from \"@ant-design/icons\";\nimport PropertyTitle from \"../Text/PropertyTitle\";\n\nexport default function BODropdownNInputHalf(props){\n\n    function handleMenuClick(e) {\n        message.info('Click on menu item.');\n        console.log('click', e);\n    }\n    const ColFormStyle = {\n        border:'none',\n    };\n\n    function handleButtonClick(e) {\n        message.info('Click on left button.');\n        console.log('click left button', e);\n    }\n    const menu = (\n        <Menu onClick={handleMenuClick}>\n            <Menu.Item key=\"1\" icon={<UserOutlined />}>\n                1st menu item\n            </Menu.Item>\n            <Menu.Item key=\"2\" icon={<UserOutlined />}>\n                2nd menu item\n            </Menu.Item>\n            <Menu.Item key=\"3\" icon={<UserOutlined />}>\n                3rd menu item\n            </Menu.Item>\n        </Menu>\n    );\n    return (\n        <>\n            <PropertyTitle text = {props.name}/>\n            <Col span={3} style={ColFormStyle} align={\"left\"}>\n                <Form.Item style = {{ margin: 5, padding: 0}}>\n                    <Dropdown.Button onClick={handleButtonClick} overlay={menu} size=\"small\">\n                        hello world\n                    </Dropdown.Button>\n                </Form.Item>\n            </Col>\n            <Col span={5} style={ColFormStyle} align={\"left\"}>\n                <Form.Item style = {{ margin: 5, padding: 0}}>\n                    <Input size=\"small\"/>\n                </Form.Item>\n            </Col>\n\n        </>\n    );\n}\n","import React from 'react';\nimport {\n    Button, Card,\n    Col,\n    Divider,\n    Form, Input,\n    Row,\n    Space,\n    Table,\n    Typography\n} from \"antd\";\nimport {CheckOutlined, LockOutlined, RedoOutlined} from \"@ant-design/icons\";\nimport SearchNInput from \"../component/Input/SearchNInput\";\nimport FromTo from \"../component/Input/FromTo\";\nimport BODropdownHalf from \"../component/Input/BODropdownHalf\";\nimport BOInput from \"../component/Input/BOInput\";\nimport BODropdownLine from \"../component/Input/BODropdownLine\";\nimport BOEmpty from \"../component/Input/BOEmpty\";\nimport BOViewHalfLine from \"../component/Input/BOViewHalfLine\";\nimport BODropdownNInputHalf from \"../component/Input/BODropdownNInputHalf\";\n\n\n\nexport default function MallInfo(props){\n    const { Column, ColumnGroup } = Table;\n\n    const columns = [\n        {\n            title: '번호',\n            dataIndex: 'no',\n            key: 'no',\n        },\n        {\n            title: '상품명',\n            dataIndex: 'prodName',\n            key: 'prodName',\n        },\n        {\n            title: 'SAP코드',\n            dataIndex: 'SAPCode',\n            key: 'SAPCode',\n        },\n        {\n            title: '브랜드',\n            dataIndex: 'brand',\n            key: 'brand',\n        },\n        {\n            title: '몰명',\n            dataIndex: 'mallName',\n            key: 'mallName',\n        },\n        {\n            title: '몰상품코드',\n            dataIndex: 'mallProdCode',\n            key: 'mallProdCode',\n        },\n        {\n            title: '몰상품명',\n            dataIndex: 'mallProdName',\n            key: 'mallProdName',\n        },\n        {\n            title: '등록일시',\n            dataIndex: 'regDate',\n            key: 'regDate',\n        },\n    ];\n    return (\n    <>\n        <Card title=\"몰 상품정보 관리\"\n              actions={[\n                  <div/>, <div/>, <div/>,\n                  <Button icon={<RedoOutlined />}> 초기화 </Button>,\n                  <Button icon = {<CheckOutlined />}> 조회 </Button>,\n                  <div/>, <div/>, <div/>,\n              ]}\n              size=\"small\"\n        >\n            <Row  style = {{ padding:\"10px\"}}>\n                <BODropdownHalf name =\"Mall 명\"></BODropdownHalf>\n                <BOInput name = \"상품명\"/>\n                <BODropdownNInputHalf name = \"상품코드\"/>\n            </Row>\n        </Card>\n        <Table columns={columns} size = \"small\"/>\n    </>\n    );\n}\n","import React from 'react';\nimport {\n    Button, Card,\n    Col,\n    Row,\n    Table,\n} from \"antd\";\nimport {CheckOutlined, LockOutlined, RedoOutlined} from \"@ant-design/icons\";\nimport BOInput from \"../component/Input/BOInput\";\nimport BORadio from \"../component/Input/BOInput\";\nimport BODropdownHalf from \"../component/Input/BODropdownHalf\";\n\nexport default function InterfaceResult(props){\n    const { Column, ColumnGroup } = Table;\n\n    const columns = [\n        {\n            title: 'No.',\n            dataIndex: 'no',\n            key: 'no',\n        },\n        {\n            title: 'I/F ID',\n            dataIndex: 'prodName',\n            key: 'prodName',\n        },\n        {\n            title: 'I/F ID명',\n            dataIndex: 'SAPCode',\n            key: 'SAPCode',\n        },\n        {\n            title: '송신 시스템',\n            dataIndex: 'brand',\n            key: 'brand',\n        },\n        {\n            title: '수신 시스템',\n            dataIndex: 'mallName',\n            key: 'mallName',\n        },\n        {\n            title: '송/수신 여부',\n            dataIndex: 'mallProdCode',\n            key: 'mallProdCode',\n        },\n        {\n            title: 'I/F 유형',\n            dataIndex: 'mallProdName',\n            key: 'mallProdName',\n        },\n        {\n            title: '전송주기',\n            dataIndex: 'regDate',\n            key: 'regDate',\n        },\n    ];\n    return (\n    <>\n        <Card title=\"I/F 결과관리\"\n              actions={[\n                  <div/>, <div/>, <div/>,\n                  <Button icon={<RedoOutlined />}> 초기화 </Button>,\n                  <Button icon = {<CheckOutlined />}> 조회 </Button>,\n                  <div/>, <div/>, <div/>,\n              ]}\n              size=\"small\"\n        >\n\n        <Row  style = {{ padding:\"10px\"}}>\n                <BOInput name = \"I/F ID\"/>\n                <BOInput name = \"I/F 명\"/>\n                <BOInput name = \"송신 시스템\"/>\n                <BOInput name = \"수신 시스템\"/>\n                <BODropdownHalf name=\"송/수신 여부\"/>\n                <BODropdownHalf name=\"I/F 유형\"/>\n            </Row>\n        </Card>\n        <Row gutter={[0,24]}  style={{marginTop:10, marginBottom:10}}>\n            <Col span={1}>\n                <Button  textAlign={'left'} >고시품목 등록 </Button>\n            </Col>\n        </Row>\n        <Table columns={columns} size=\"small\" />\n    </>\n    );\n}\n","import React from 'react';\nimport {\n    Col,\n\n    Form,\n    Input,\n    Typography,\n    Radio,\n} from \"antd\";\nimport PropertyTitle from \"../Text/PropertyTitle\";\n\n\nexport default function BORadio(props){\n    const onChange = () => {\n\n    }\n\n    return (\n        <>\n            <PropertyTitle text = {props.name}/>\n            <Col span={8} align={\"left\"}>\n                <Form.Item style = {{ margin: 5, padding: 0}}>\n                    <Radio.Group onChange={onChange} defaultValue={1}>\n                        <Radio value={1}>전체</Radio>\n                        <Radio value={2}>사용</Radio>\n                        <Radio value={3}>사용 안함</Radio>\n                    </Radio.Group>\n                </Form.Item>\n            </Col>\n\n        </>\n    );\n}\n","import React from 'react';\nimport {\n    Button, Card,\n    Col,\n    Row,\n    Table,\n} from \"antd\";\nimport {CheckOutlined, LockOutlined, RedoOutlined} from \"@ant-design/icons\";\nimport BOInput from \"../component/Input/BOInput\";\nimport BORadio from \"../component/Input/BORadio\";\n\nexport default function AttributeInfo(props){\n    const { Column, ColumnGroup } = Table;\n\n    const columns = [\n        {\n            title: '번호',\n            dataIndex: 'no',\n            key: 'no',\n        },\n        {\n            title: '고시품목ID',\n            dataIndex: 'prodName',\n            key: 'prodName',\n        },\n        {\n            title: '고시품목명',\n            dataIndex: 'SAPCode',\n            key: 'SAPCode',\n        },\n        {\n            title: '정렬순위',\n            dataIndex: 'brand',\n            key: 'brand',\n        },\n        {\n            title: '사용여부',\n            dataIndex: 'mallName',\n            key: 'mallName',\n        },\n        {\n            title: '고시항목ID',\n            dataIndex: 'mallProdCode',\n            key: 'mallProdCode',\n        },\n        {\n            title: '고시항목',\n            dataIndex: 'mallProdName',\n            key: 'mallProdName',\n        },\n        {\n            title: '정렬순위',\n            dataIndex: 'regDate',\n            key: 'regDate',\n        },\n        {\n            title: '사용여부',\n            dataIndex: 'regDate',\n            key: 'regDate',\n        },\n    ];\n    return (\n    <>\n        <Card title=\"몰 상품정보 관리\"\n              actions={[\n                  <div/>, <div/>, <div/>,\n                  <Button icon={<RedoOutlined />}> 초기화 </Button>,\n                  <Button icon = {<CheckOutlined />}> 조회 </Button>,\n                  <div/>, <div/>, <div/>,\n              ]}\n              size=\"small\"\n        >\n\n        <Row  style = {{ padding:\"10px\"}}>\n                <BOInput name = \"속성그룹명\"/>\n                <BOInput name = \"속성항목명\"/>\n                <BOInput name = \"속성그룹ID\"/>\n                <BOInput name = \"속성항목ID\"/>\n                <BORadio name = \"속성그룹 사용여부\" contents={[\"전체\", \"사용\", \"사용 안함\"]}/>\n                <BORadio name = \"속성항목 사용여부\" contents={[\"전체\", \"사용\", \"사용 안함\"]}/>\n                <BORadio name = \"속성그룹 변경여부\" contents={[\"전체\", \"가능\", \"불가능\"]}/>\n            </Row>\n        </Card>\n        <Row gutter={[0,24]}  style={{marginTop:10, marginBottom:10}}>\n            <Col span={1}>\n                <Button  textAlign={'left'}> 속성등록 </Button>\n            </Col>\n        </Row>\n        <Table columns={columns} size = \"small\"/>\n    </>\n    );\n}\n","import React from 'react';\nimport {\n    Button, Card,\n    Col,\n    Row,\n    Table,\n} from \"antd\";\nimport {CheckOutlined, LockOutlined, RedoOutlined} from \"@ant-design/icons\";\nimport BOInput from \"../component/Input/BOInput\";\nimport BORadio from \"../component/Input/BORadio\";\n\nexport default function NoticeInfo(props){\n    const { Column, ColumnGroup } = Table;\n\n    const columns = [\n        {\n            title: '번호',\n            dataIndex: 'no',\n            key: 'no',\n        },\n        {\n            title: '고시품목ID',\n            dataIndex: 'prodName',\n            key: 'prodName',\n        },\n        {\n            title: '고시품목명',\n            dataIndex: 'SAPCode',\n            key: 'SAPCode',\n        },\n        {\n            title: '정렬순위',\n            dataIndex: 'brand',\n            key: 'brand',\n        },\n        {\n            title: '사용여부',\n            dataIndex: 'mallName',\n            key: 'mallName',\n        },\n        {\n            title: '고시항목ID',\n            dataIndex: 'mallProdCode',\n            key: 'mallProdCode',\n        },\n        {\n            title: '고시항목',\n            dataIndex: 'mallProdName',\n            key: 'mallProdName',\n        },\n        {\n            title: '정렬순위',\n            dataIndex: 'regDate',\n            key: 'regDate',\n        },\n        {\n            title: '사용여부',\n            dataIndex: 'regDate',\n            key: 'regDate',\n        },\n    ];\n    return (\n    <>\n        <Card title=\"몰 상품정보 관리\"\n              actions={[\n                  <div/>, <div/>, <div/>,\n                  <Button icon={<RedoOutlined />}> 초기화 </Button>,\n                  <Button icon = {<CheckOutlined />}> 조회 </Button>,\n                  <div/>, <div/>, <div/>,\n              ]}\n              size=\"small\"\n        >\n\n        <Row  style = {{ padding:\"10px\"}}>\n                <BOInput name = \"고시품목명\"/>\n                <BOInput name = \"고시항목명\"/>\n                <BOInput name = \"고시품목ID\"/>\n                <BOInput name = \"고시항목ID\"/>\n                <BORadio name = \"고시품목 사용여부\" contents={[\"전체\", \"사용\", \"사용 안함\"]}/>\n                <BORadio name = \"고시항목 사용여부\" contents={[\"전체\", \"사용\", \"사용 안함\"]}/>\n            </Row>\n\n        </Card>\n        <Row gutter={[0,24]}  style={{marginTop:10, marginBottom:10}}>\n            <Col span={1}>\n                <Button  textAlign={'left'}> 고시품목등록 </Button>\n            </Col>\n        </Row>\n        <Table columns={columns} size = \"small\"/>\n    </>\n    );\n}\n","import React from 'react';\nimport {\n    Col,\n\n    Form,\n    Input,\n    Typography,\n} from \"antd\";\nimport PropertyTitle from \"../Text/PropertyTitle\";\n\n\nexport default function BOInputFull(props){\n    return (\n        <>\n            <Col span={12}   style={{textAlign: 'center'}} >\n                <Typography.Title level={5} style={{margin:10}} size = \"small\">{props.name} </Typography.Title>\n            </Col>\n\n            <Col span={12} align={\"left\"}>\n                <Form.Item style = {{ margin: 5, padding: 0}}>\n                    <Input size = \"small\"/>\n                </Form.Item>\n            </Col>\n\n        </>\n    );\n}\n","import React from 'react';\nimport {\n    Button, Card,\n    Col, Input,\n    Row,\n    Table,\n} from \"antd\";\nimport {\n    CheckOutlined,\n    LockOutlined,\n    MinusOutlined,\n    PlusOutlined,\n    RedoOutlined, ReloadOutlined,\n    SaveOutlined,\n    SearchOutlined\n} from \"@ant-design/icons\";\nimport BOInput from \"../component/Input/BOInput\";\nimport BORadio from \"../component/Input/BORadio\";\nimport BOEmpty from \"../component/Input/BOEmpty\";\nimport BODropdownLine from \"../component/Input/BODropdownLine\";\nimport BOInputFull from \"../component/Input/BOInputFull\";\nimport BODropdownHalf from \"../component/Input/BODropdownHalf\";\n\nexport default function SynonymDic(props){\n    const { Column, ColumnGroup } = Table;\n\n    const columns = [\n        {\n            title: '동의어키워드값',\n            dataIndex: 'no',\n            key: 'no',\n        },\n        {\n            title: '언어코드',\n            dataIndex: 'prodName',\n            key: 'prodName',\n        },\n        {\n            title: '동의어 리스트',\n            dataIndex: 'SAPCode',\n            key: 'SAPCode',\n        },\n    ];\n\n    const columns2 = [\n        {\n            title: 'check',\n            dataIndex: 'name',\n        },\n        {\n            title: '동의어키워드값',\n            dataIndex: 'age',\n        },\n        {\n            title: '언어코드',\n            dataIndex: 'address',\n        },\n    ];\n    return (\n    <>\n        <Row>\n            <Col span={14}>\n                <Card title = \"동의어 사전\"\n                      actions={[\n                          <div/>, <div/>,\n                          <Button icon={<PlusOutlined />}>추가</Button>,\n                          <Button icon={<MinusOutlined />}>삭제</Button>,\n                          <Button icon={<SaveOutlined />}>저장</Button>,\n                          <Button icon={<ReloadOutlined />}>초기화</Button>,\n                          <div/>, <div/>,\n                      ]}\n                      size=\"small\"\n                >\n\n                <Row>\n                        <Col><Button icon={<CheckOutlined />}>사전 유효성 검사</Button></Col>\n                        <Col><Button icon={<SaveOutlined />}>CSV 다운로드</Button></Col>\n                        <Col><Button icon={<SaveOutlined />}>TXT 다운로드</Button></Col>\n                        <Col><Button icon={<SaveOutlined />}>CSV Import </Button></Col>\n                        <Col><Input size = \"small\" style={{margin:\"4px\"}}/></Col>\n                        <Col><Button size=\"small\" style={{margin:\"4px\"}}>찾아보기</Button></Col>\n                    </Row>\n\n                    <Row>\n                        <BOInput name = \"동의어 검색\"/>\n                        <Col span={12}>\n                            <Button icon={<SearchOutlined/>} size=\"small\" style={{marginTop:\"4px\"}}> 검색 </Button>\n                        </Col>\n                    </Row>\n\n                </Card>\n                <Table columns={columns} size = \"small\" style = {{marginTop:15}}/>\n\n            </Col>\n            <Col span={10}>\n                <Card title = \"동의어 변경\" size = \"small\">\n                    <Row>\n                        <BOInputFull name=\"동의어키워드값:\"/>\n                        <BODropdownLine name=\"언어코드:\" />\n                    </Row>\n                    <Table columns={columns2}  style = {{marginTop:15}}/>\n                </Card>\n            </Col>\n        </Row>\n    </>\n    );\n}\n","import React, {useEffect} from 'react';\nimport {\n    Button, Card,\n    Row, Table, Form, Input, InputNumber, Col, Typography\n} from \"antd\";\nimport {CheckOutlined,RedoOutlined } from \"@ant-design/icons\";\nimport BOInput from \"../component/Input/BOInput\";\n\nimport moment from 'moment';\nimport BOInputFull from \"../component/Input/BOInputFull\";\nimport PropertyTitle from \"../component/Text/PropertyTitle\";\n\n\nexport default function ProductInfo(props){\n    const [productForm] = Form.useForm();\n\n    useEffect(() => {\n        productForm.setFieldsValue({\n            form_date: getToday(),\n            form_market: '',\n            form_prod_no:'',\n            form_brand:'',\n            form_prod:'',\n            form_price:0,\n    });\n\n    }, []);\n\n    const layout = {\n        labelCol: { span: 4 },\n        wrapperCol: { span: 12 },\n    };\n\n    const validateMessages = {\n        required: '${label} is required!',\n        types: {\n            email: '${label} is not a valid email!',\n            number: '${label} is not a valid number!',\n        },\n        number: {\n            range: '${label} must be between ${min} and ${max}',\n        },\n    };\n\n    const onFinish = (values: any) => {\n        console.log(values);\n        const fieldValue = productForm.getFieldsValue();\n        console.log(fieldValue)\n    };\n\n    const data = [\n        {\n            key: '1',\n            date: '2021/10/01',\n            market: '쿠팡',\n            skuId: 11111111,\n            viId: 22222222,\n            name: '미장센 헬로크림 6WB 웜브라운',\n            price: 2497,\n            adjustedPrice: 0,\n        },\n    ]\n\n    const columns = [\n        {\n            title: '날짜',\n            dataIndex: 'date',\n            key: 'date',\n        },\n        {\n            title: '마켓 이름',\n            dataIndex: 'market',\n            key: 'market',\n        },\n        {\n            title: 'SKU ID',\n            dataIndex: 'skuId',\n            key: 'skuId',\n        },\n        {\n            title: 'VI ID',\n            dataIndex: 'viId',\n            key: 'viId',\n        },\n        {\n            title: '상품명',\n            dataIndex: 'name',\n            key: 'name',\n        },\n        {\n            title: '상품가격',\n            dataIndex: 'price',\n            key: 'price',\n        },\n        {\n            title: '조정된 가격',\n            dataIndex: 'adjustedPrice',\n            key: 'adjustedPrice',\n        },\n    ];\n\n    const getToday = () => {\n        const d = new Date();\n        return  d.getFullYear() + '/' + (d.getMonth()+1) + '/' + d.getDate();\n    }\n    const registerProduct = () => {\n        const fieldValue = productForm.getFieldsValue();\n\n        alert(\"hlello\")\n        // alert(fieldValue?.form_date);\n\n    }\n\n    const onSaveClick = () => {\n        const fieldValue = productForm.getFieldsValue();\n        alert('abao')\n        console.log(fieldValue)\n    }\n\n    return (\n    <>\n        <Card title=\"상품 가격 정보\" type = \"inner\"\n              actions={[\n                  <div/>, <div/>, <div/>,\n                  <Button icon={<RedoOutlined />}> 초기화 </Button>,\n                  // <Button icon = {<CheckOutlined />} onClick={() => {registerProduct()}}> 등록 </Button>,\n                  <Button icon = {<CheckOutlined />} onClick={() => {alert('저장')}}> 가격조정 </Button>,\n                  <div/>, <div/>, <div/>,\n              ]}\n              size=\"small\"\n        >\n            <Form\n                {...layout}\n                form={productForm}\n                onFinish={onFinish}\n            >\n                <Form.Item  label = \"마켓 이름\" name = \"form_market\"><Input/></Form.Item>\n                <Form.Item  label = \"SKU ID\" name = \"form_sku_id\"><Input/></Form.Item>\n                <Form.Item  label = \"VI ID\" name = \"form_vi_id\"><Input/></Form.Item>\n                <Form.Item  label = \"상품명\" name = \"form_prod\"><Input/></Form.Item>\n                <Form.Item  label = \"가격\" name = \"form_price\"><Input/></Form.Item>\n                <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 4 }}>\n                    <Button type = \"default\"> 초기화 </Button>\n                    <Button type=\"primary\" htmlType=\"submit\" onClick={onSaveClick}>\n                        저장\n                    </Button>\n                </Form.Item>\n            </Form>\n            <Table columns={columns} data={data} size=\"small\"/>\n        </Card>\n\n\n    </>\n    );\n}\n","import React, {useEffect} from 'react';\nimport {\n    Button, Card,\n    Row, Table, Form, Input, InputNumber, Col, Typography\n} from \"antd\";\nimport {CheckOutlined,RedoOutlined } from \"@ant-design/icons\";\nimport BOInput from \"../component/Input/BOInput\";\n\nimport moment from 'moment';\nimport BOInputFull from \"../component/Input/BOInputFull\";\nimport PropertyTitle from \"../component/Text/PropertyTitle\";\nimport { Upload, message } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\n\n\n\nexport default function ProductAdjust(props){\n    const [productForm] = Form.useForm();\n\n    useEffect(() => {\n        productForm.setFieldsValue({\n            form_date: getToday(),\n            form_market: '',\n            form_prod_no:'',\n            form_brand:'',\n            form_prod:'',\n            form_price:0,\n    });\n\n    }, []);\n\n    const layout = {\n        labelCol: { span: 4 },\n        wrapperCol: { span: 12 },\n    };\n\n    const validateMessages = {\n        required: '${label} is required!',\n        types: {\n            email: '${label} is not a valid email!',\n            number: '${label} is not a valid number!',\n        },\n        number: {\n            range: '${label} must be between ${min} and ${max}',\n        },\n    };\n\n    const onFinish = (values: any) => {\n        console.log(values);\n        const fieldValue = productForm.getFieldsValue();\n        console.log(fieldValue)\n    };\n\n    const columns = [\n        {\n            title: '날짜',\n            dataIndex: 'date',\n            key: 'date',\n        },\n        {\n            title: '마켓 이름',\n            dataIndex: 'market',\n            key: 'market',\n        },\n        {\n            title: '상품 번호',\n            dataIndex: 'productNo',\n            key: 'productNo',\n        },\n        {\n            title: '브랜드 이름',\n            dataIndex: 'brand',\n            key: 'brand',\n        },\n        {\n            title: '상품명',\n            dataIndex: 'name',\n            key: 'name',\n        },\n        {\n            title: '상품가격',\n            dataIndex: 'price',\n            key: 'price',\n        },\n        {\n            title: '할인정보',\n            dataIndex: 'bcast',\n            key: 'bcast',\n        },\n    ];\n\n    const getToday = () => {\n        const d = new Date();\n        return  d.getFullYear() + '/' + (d.getMonth()+1) + '/' + d.getDate();\n    }\n    const registerProduct = () => {\n        const fieldValue = productForm.getFieldsValue();\n\n        alert(\"hlello\")\n        // alert(fieldValue?.form_date);\n\n    }\n    const props2 = {\n        name: 'file',\n        action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n        headers: {\n            authorization: 'authorization-text',\n        },\n        onChange(info) {\n            if (info.file.status !== 'uploading') {\n                console.log(info.file, info.fileList);\n            }\n            if (info.file.status === 'done') {\n                message.success(`${info.file.name} file uploaded successfully`);\n            } else if (info.file.status === 'error') {\n                message.error(`${info.file.name} file upload failed.`);\n            }\n        },\n    };\n\n    return (\n    <>\n        <div className=\"site-card-wrapper\">\n            <Row gutter={32}>\n                <Col span={8}>\n                    <Card title=\"네이버 upload\" extra={<a href=\"#\">More</a>} style={{ width: 300 }}>\n                        <Upload {...props}>\n                            <Button icon={<UploadOutlined />}>Click to Upload</Button>\n                        </Upload>\n                    </Card>\n                </Col>\n                <Col span={8}>\n                    <Card title=\"쿠팡 upload\" extra={<a href=\"#\">More</a>} style={{ width: 300 }}>\n                        <Upload {...props}>\n                            <Button icon={<UploadOutlined />}>Click to Upload</Button>\n                        </Upload>\n                    </Card>\n                </Col>\n            </Row>\n            <br/>\n            <Row gutter={32}>\n                <Col span={8}>\n                    <Card title=\"네이버 upload\" extra={<a href=\"#\">More</a>} style={{ width: 300 }}>\n                        <Upload {...props}>\n                            <Button icon={<UploadOutlined />}>Click to Upload</Button>\n                        </Upload>\n                    </Card>\n                </Col>\n                <Col span={8}>\n                    <Card title=\"쿠팡 upload\" extra={<a href=\"#\">More</a>} style={{ width: 300 }}>\n                        <Upload {...props}>\n                            <Button icon={<UploadOutlined />}>Click to Upload</Button>\n                        </Upload>\n                    </Card>\n                </Col>\n            </Row>\n\n        </div>\n        <br/>\n        <Card title=\"상품 가격 조정\" type = \"inner\"\n              actions={[\n                  <div/>, <div/>, <div/>,\n                  <Button icon={<RedoOutlined />}> 초기화 </Button>,\n                  <Button icon = {<CheckOutlined />} onClick={() => {registerProduct()}}> 등록 </Button>,\n                  <Button icon = {<CheckOutlined />} onClick={() => {alert('저장')}}> 저장 </Button>,\n                  <div/>, <div/>, <div/>,\n              ]}\n              size=\"small\"\n        >\n            <Form\n                {...layout}\n                form={productForm}\n                onFinish={onFinish}\n            >\n\n                <Form.Item  size = \"large\" label = \"날짜\" name = \"form_date\"><Input/></Form.Item>\n                <Form.Item  label = \"마켓 이름\" name = \"form_market\"><Input/></Form.Item>\n                <Form.Item  label = \"상품 번호\" name = \"form_prod_no\"><Input/></Form.Item>\n                <Form.Item  label = \"브랜드 이름\" name = \"form_brand\"><Input/></Form.Item>\n                <Form.Item  label = \"상품명\" name = \"form_prod\"><Input/></Form.Item>\n                <Form.Item  label = \"가격\" name = \"form_price\"><Input/></Form.Item>\n                <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 4 }}>\n                    <Button type = \"default\"> 초기화 </Button>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        제출\n                    </Button>\n                </Form.Item>\n            </Form>\n            <Table columns={columns} size=\"small\"/>\n        </Card>\n\n\n    </>\n    );\n}\n","import React from 'react';\nimport ProductInfo from \"../Contents/ProductInfo\";\nimport BatchUpdate from \"../Contents/BatchUpdate\";\nimport MallInfo from \"../Contents/MallInfo\";\nimport InterfaceResult from \"../Contents/InterfaceResult\";\nimport AttributeInfo from \"../Contents/AttributeInfo\";\nimport NoticeInfo from \"../Contents/NoticeInfo\";\nimport SynonymDic from \"../Contents/SynonymDic\";\nimport PriceInfo from \"../Contents/PriceInfo\";\nimport PriceAdjust from \"../Contents/PriceAdjust\";\n\nexport default function BOContents(props){\n    const Keys = [\n        { contentsKey : \"011\", func: (<PriceInfo/>)},\n        { contentsKey : \"012\", func: (<PriceAdjust/>)},\n        { contentsKey : \"111\", func: (<ProductInfo/>)},\n        { contentsKey : \"112\",  func: (<BatchUpdate/>)},\n        { contentsKey : \"113\",  func: (<MallInfo/>)},\n        { contentsKey : \"114\",  func: (<InterfaceResult/>)},\n        { contentsKey : \"121\",  func: (<AttributeInfo/>)},\n        { contentsKey : \"122\",  func: (<NoticeInfo/>)},\n        { contentsKey : \"211\",  func: (<SynonymDic/>)},\n    ];\n    const writeContents = () =>{\n        for (const content of Keys) {\n            if (content.contentsKey === props.contentsKey){\n                return content.func;\n            }\n        }\n    }\n\n    return (\n            <>\n                {writeContents()}\n            </>\n        );\n}\n","import React, {useState} from 'react';\nimport {Col, Layout, Menu, Row, Space,} from 'antd';\nimport '../index-342fc69c.css';\nimport {\n    UserOutlined,\n    GiftOutlined, SearchOutlined, ReconciliationOutlined, MenuOutlined,\n    ReadOutlined, AndroidOutlined, SyncOutlined,\n} from '@ant-design/icons';\nimport Title from \"antd/es/typography/Title\";\nimport BOContents from \"./BOContents\";\nconst { Header, Sider, Content } = Layout;\n\nconst { SubMenu } = Menu;\n\n\nexport default function UBOMain(){\n    const [collapsed, setCollapsed] = useState(false);\n    const [contents, setContents] = useState(\"\")\n\n\n    const menuClick = (key, name) => {\n        setContents(key?.key)\n    }\n\n    return (\n        <>\n        <Layout>\n            <Header\n                style = {{\n                    backgroundColor: \"white\",\n                    textAlign:\"left\",\n                    verticalAlign:\"center\",\n                }}\n\n            >\n                <Space>\n                    <Col span={1}>\n                        <MenuOutlined style={{ fontSize: '24px', color: '#08c' }}\n                                      onClick={() => { setCollapsed(!collapsed)}} />\n                    </Col>\n                    <Col  span={24} style={{marginTop:\"12px\", marginLeft:\"12px\"}}>\n                        <Title level={3} >플랫폼 통합 BackOffice</Title>\n                    </Col>\n                </Space>\n            </Header>\n        <Layout>\n            <Sider\n                style={{\n                    overflow: 'auto',\n                    height: '100vh',\n                    left: 0,\n                }}\n                trigger={null} collapsible collapsed={collapsed}\n            >\n                <Menu mode=\"inline\" theme=\"dark\">\n                    <SubMenu key=\"sub0\" icon={<SyncOutlined />} title=\"상품가격 조정\">\n                        <Menu.Item key=\"011\" onClick={(key) =>{menuClick(key)}}>가격 조정</Menu.Item>\n                        <Menu.Item key=\"012\" onClick={(key) =>{menuClick(key)}}>가격조정 설정</Menu.Item>\n\n                    </SubMenu>\n                    <SubMenu key=\"sub1\" icon={<GiftOutlined />} title=\"상품\">\n                        <SubMenu key=\"sub11\" icon={<GiftOutlined />} title=\"상품정보\">\n                            <Menu.Item key=\"111\" onClick={(key) =>{menuClick(key)}}>상품정보</Menu.Item>\n                            <Menu.Item key=\"112\" onClick={(key) =>{menuClick(key)}}>일괄업데이트</Menu.Item>\n                            <Menu.Item key=\"113\" onClick={(key) =>{menuClick(key)}}>Mall정보</Menu.Item>\n                            <Menu.Item key=\"114\" onClick={(key) =>{menuClick(key)}}>I/F결과</Menu.Item>\n                        </SubMenu>\n                        <SubMenu key=\"sub12\" icon={<GiftOutlined />} title=\"상품속성\">\n                            <Menu.Item key=\"121\" onClick={(key) =>{menuClick(key)}}>속성정보</Menu.Item>\n                            <Menu.Item key=\"122\" onClick={(key) =>{menuClick(key)}}>고시정보</Menu.Item>\n                        </SubMenu>\n                    </SubMenu>\n                    <SubMenu key=\"sub2\" icon={<SearchOutlined />} title=\"검색\">\n                        <SubMenu key=\"sub21\" icon={<ReadOutlined />} title=\"사전관리\" >\n                            <Menu.Item key=\"211\" onClick={(key) =>{menuClick(key)}}>동의어사전</Menu.Item>\n                            <Menu.Item key=\"212\" onClick={(key) =>{menuClick(key)}}>사용자사전</Menu.Item>\n                            <Menu.Item key=\"213\" onClick={(key) =>{menuClick(key)}}>동기화정보</Menu.Item>\n                        </SubMenu>\n                        <Menu.Item key=\"22\" onClick={(key) =>{menuClick(key)}}>검색테스트 도구</Menu.Item>\n                        <Menu.Item key=\"23\" onClick={(key) =>{menuClick(key)}}>자동완성 관리자 도구</Menu.Item>\n                    </SubMenu>\n                    <SubMenu key=\"sub3\" icon={<ReconciliationOutlined />} title=\"BCM\">\n                        <Menu.Item key=\"31\" onClick={(key) =>{menuClick(key)}}>BCM1</Menu.Item>\n                        <Menu.Item key=\"32\" onClick={(key) =>{menuClick(key)}}>BCM2</Menu.Item>\n                    </SubMenu>\n                    <SubMenu key=\"sub4\" icon={<UserOutlined />} title=\"관리자\">\n                        <Menu.Item key=\"41\" onClick={(key) =>{menuClick(key)}}>관리자</Menu.Item>\n                        <Menu.Item key=\"42\" onClick={(key) =>{menuClick(key)}}>계정잠금해제</Menu.Item>\n                    </SubMenu>\n                </Menu>\n            </Sider>\n            <Layout className=\"site-layout\">\n                <Content\n                    style={{\n                        margin: '24px 16px 0',\n                        overflow: 'initial',\n                        height: '100vh',\n                        minHeight: 280,\n                    }}>\n\n                    <BOContents contentsKey = {contents}/>\n                </Content>\n            </Layout>\n        </Layout>\n        </Layout>\n        </>\n    );\n}\n","import React, {useEffect, useState} from 'react';\nimport {Form, Input,  Modal} from 'antd';\nimport '../index-342fc69c.css';\nimport axios from \"axios\";\nimport {Cookies} from \"react-cookie\"\n\n\nimport Checkbox from \"antd/es/checkbox/Checkbox\";\n\nexport default function LoginMain(){\n    const [isVisible, setIsVisible] = useState(true)\n    const [loginForm] = Form.useForm();\n\n    const cookies = new Cookies()\n\n    useEffect(() => {\n\n    }, []);\n\n    const handleCancel = () => {\n        setIsVisible(false);\n    };\n\n    const TestSend = () => {\n        const url = \"https://i-dev-piboapi.amorepacific.com/pibo/pims/api/v1/031/attributes/10039\";\n\n        axios({\n            method: 'get',\n            url: url,\n            data: {\n            },\n        }).then(function (response) {\n            alert(response.data?.message);\n            console.log(\"test\" + response);\n        }).catch(function (error) {\n            console.log(error);\n            if (error.response) {\n                alert(error?.message)\n                // 요청이 이루어졌으며 서버가 2xx의 범위를 벗어나는 상태 코드로 응답했습니다.\n                console.log(error.response.data);\n                console.log(error.response.status);\n                console.log(error.response.headers);\n            } else if (error.request) {\n                // 요청이 이루어 졌으나 응답을 받지 못했습니다.\n                // `error.request`는 브라우저의 XMLHttpRequest 인스턴스 또는\n                // Node.js의 http.ClientRequest 인스턴스입니다.\n                console.log(error.request);\n                console.log(error)\n            } else {\n                // 오류를 발생시킨 요청을 설정하는 중에 문제가 발생했습니다.\n                console.log('Error', error.message);\n            }\n            console.log(error.config);\n        });\n    }\n\n    const loginOk = () => {\n        const fieldValue = loginForm.getFieldsValue();\n        const paramId = fieldValue['id'];\n        const paramPassword = fieldValue['password']\n\n        const url = \"https://i-dev-piboapi.amorepacific.com/pibo/login\";\n\n        axios({\n            method: 'post',\n            url: url,\n            data: {\n                id: paramId,\n                password: paramPassword,\n            },\n            config: { withCredentials: true },\n\n        }).then(function (response) {\n\n            alert(response.data?.message);\n            console.log(response);\n            // console.log(response.headers);\n\n            cookies.set(\"pauth\", response.data?.pauth)\n            cookies.set(\"pid\", paramId)\n            axios.defaults.headers.common['Authorization'] = `Bearer ${response.data?.pauth}`\n            TestSend();\n            if ( response.data?.result === 'S'){\n                setIsVisible(false);\n            }else{\n                setIsVisible(true);\n            }\n            return;\n        }).catch(function (error) {\n            console.log(error);\n            if (error.response) {\n                // 요청이 이루어졌으며 서버가 2xx의 범위를 벗어나는 상태 코드로 응답했습니다.\n                console.log(error.response.data);\n                console.log(error.response.status);\n                console.log(error.response.headers);\n            }\n            else if (error.request) {\n                // 요청이 이루어 졌으나 응답을 받지 못했습니다.\n                // `error.request`는 브라우저의 XMLHttpRequest 인스턴스 또는\n                // Node.js의 http.ClientRequest 인스턴스입니다.\n                console.log(error.request);\n                console.log(error)\n            }\n            else {\n                // 오류를 발생시킨 요청을 설정하는 중에 문제가 발생했습니다.\n                console.log('Error', error.message);\n            }\n            console.log(error.config);\n        });\n    }\n    const onFinishFailed = () => {\n\n    }\n\n    const onFinish = (values: any) => {\n    };\n    return (\n        <div>\n            <Modal title=\"플랫폼 통합 BO 로그인\" visible={isVisible} onOk={loginOk} onCancel={handleCancel}>\n\n            <Form\n                name=\"basic\"\n                form={loginForm}\n                labelCol={{ span: 6 }}\n                wrapperCol={{ span: 18 }}\n                style = {{verticalAlign: \"middle\"}}\n                initialValues={{ remember: true }}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n            >\n                <Form.Item\n                    label=\"id\"\n                    name=\"id\"\n                    rules={[{ required: true, message: 'AP-ON id 를 넣으세요.' }]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Password\"\n                    name=\"password\"\n                    rules={[{ required: true, message: '암호를 넣으세요.' }]}\n\n                >\n                    <Input.Password />\n                </Form.Item>\n\n                <Form.Item name=\"remember\" valuePropName=\"checked\" wrapperCol={{ offset: 8, span: 16 }}>\n                    <Checkbox>Remember me</Checkbox>\n                </Form.Item>\n\n            </Form>\n            </Modal>\n        </div>\n    );\n}\n","import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport UBOMain from \"./component/UBOMain\";\nimport LoginMain from \"./component/LoginMain\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <LoginMain/>\n        <UBOMain/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}